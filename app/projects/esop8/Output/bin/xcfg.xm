###################################################################################################
#                                                                                                 #
# 禁止修改区，请保留以下配置不要修改                                                              #
# 自定义增加配置，请移至文件后面允许修改区                                                        #
#                                                                                                 #
###################################################################################################
depend(0x01020300);
config(SUB, "系统配置", "系统的相关配置");
config(LEVEL, 0x00);
config(CHECK, "启用配置", "启用外部配置，关闭则使用程序默认配置", CONFIG_EN, 1);
config(LEVEL, 0x03);
config(LISTVAL, "语音语言选择", "选择语音提示音的语言", LANG_ID, BIT, 2, 2, 4, ("英文", 0), ("中文", 1), ("中英文(出厂默认英文)", 2), ("中英文(出厂默认中文)", 3));
config(CHECK, "软开关机功能", "是否使能软开关机功能", SOFT_POWER_ON_OFF, 1);
config(CHECK, "POWKEY 10s复位系统", "是否长按POWKEY 10s复位系统，用于防止系统死机", POWKEY_10S_RESET, 1);
config(CHECK, "第一次上电直接开机", "接入电池第一次上电是否直接开机", PWRON_FRIST_BAT_EN, 0);
config(LEVEL, 0x00);
config(CHECK, "系统时钟52MHz", "选择52MHz系统时钟", SYS_CLK, 0);
config(LEVEL, 0x03);
config(CHECK, "系统32级音量", "系统是否32级音量可调，否则16级", VOL32_EN, 1);
config(CHECK, "功放MUTE功能", "是否使能功放MUTE功能", SPK_MUTE_EN, 0);
config(CHECK, "高MUTE", "是否为高MUTE，否则为低MUTE", HIGH_MUTE, 1, SPK_MUTE_EN);
config(LISTVAL, "功放MUTE的IO选择", "功放MUTE的IO选择", MUTE_IO_SEL, BIT, 3, 0, 8, ("None", 0), ("PA6", 1), ("PA7", 2), ("PB3", 3), ("PB4", 4), ("PE0", 5), ("PE7", 6), ("PF2", 7), SPK_MUTE_EN);
config(BIT, "功放MUTE延时(单位50ms)", "功放MUTE的延时控制，防止解MUTE时间不够导致声音不全。", LOUDSPEAKER_UNMUTE_DELAY, 4, 0, 15, 0, SPK_MUTE_EN);
config(LISTVAL, "自动休眠时间", "设置自动休眠时间", SYS_SLEEP_TIME, BIT, 5, 3, 24, ("不休眠", 0), ("10秒钟后", 1), ("20秒钟后", 2), ("30秒钟后", 3), ("40秒钟后", 4), ("50秒钟后", 5), ("1分钟后", 6), ("2分钟后", 7), ("3分钟后", 8), ("4分钟后", 9), ("5分钟后", 10), ("6分钟后", 11), ("7分钟后", 12), ("8分钟后", 13), ("9分钟后", 14), ("10分钟后", 15), ("12分钟后", 16), ("15分钟后", 17), ("20分钟后", 18), ("25分钟后", 19), ("30分钟后", 20), ("45分钟后", 21), ("1小时后", 22), ("关闭SNIFF", 23));
config(LISTVAL, "自动关机时间", "设置自动关机时间", SYS_OFF_TIME, BIT, 5, 10, 23,  ("不关机", 0), ("10秒钟后", 1), ("20秒钟后", 2), ("30秒钟后", 3), ("40秒钟后", 4), ("50秒钟后", 5), ("1分钟后", 6), ("2分钟后", 7), ("3分钟后", 8), ("4分钟后", 9), ("5分钟后", 10), ("6分钟后", 11), ("7分钟后", 12), ("8分钟后", 13), ("9分钟后", 14), ("10分钟后", 15), ("12分钟后", 16), ("15分钟后", 17), ("20分钟后", 18), ("25分钟后", 19), ("30分钟后", 20), ("45分钟后", 21), ("1小时后", 22));
config(LISTVAL, "低电语音提示电压", "选择低电语音提示电压", LPWR_WARNING_VBAT, BIT, 3, 4, 8, ("不低电提示", 0), ("3.0V", 1), ("3.1V", 2), ("3.2V", 3), ("3.3V", 4), ("3.4V", 5), ("3.5V", 6), ("3.6V", 7));
config(LISTVAL, "低电关机电压", "选择低电关机电压", LPWR_OFF_VBAT, BIT, 3, 3, 8, ("不关机", 0), ("2.9V", 1), ("3.0V", 2), ("3.1V", 3), ("3.2V", 4), ("3.3V", 5), ("3.4V", 6), ("3.5V", 7));
config(LISTVAL, "低电语音播报周期", "设置低电语音播报间隔周期", LPWR_WARNING_PERIOD, BIT, 4, 5, 16, ("5秒", 0), ("10秒", 1), ("15秒", 2), ("20秒", 3), ("25秒", 4), ("30秒", 5), ("45秒", 6), ("1分钟", 7), ("2分钟", 8), ("3分钟", 9), ("4分钟", 10), ("5分钟", 11), ("6分钟", 12), ("7分钟", 13), ("8分钟", 14), ("10分钟", 15));
config(LISTVAL, "低电播报几次后关机", "低电播报几次后自动关机，选择低电播报次数或关闭此功能", LWRPWR_COUNTER_LIMIT, BIT, 3, 0, 8, ("None", 0), ("1次", 1), ("2次", 2), ("3次", 3), ("5次", 4), ("8次", 5), ("10次", 6), ("15次", 7));
config(BIT, "开机默认音量", "开机默认音量级数, 配置值：n+1", SYS_INIT_VOL, 5, 0, 31, 31);
config(BIT, "恢复默认音量阈值", "小于多少级音量后恢复成系统音量阈值, 配置值：n+1", SYS_RECOVER_INITVOL, 5, 0, 31, 31);
config(BIT, "提示音播放音量", "提示音播放音量级数, 配置值：n+1", WARNING_VOLUME, 5, 0, 31, 27);
config(CHECK, "提示音跟随系统音量", "是否提示音音量跟随系统音量，否则固定音量播放。", TONE_SYSVOL_EN, 0);
config(LISTVAL, "软开机长按时间选择", "长按PWRKEY多长时间后软开机", PWRON_PRESS_TIME,  BIT, 3, 3, 8, ("0.1秒", 0), ("0.5秒", 1), ("1秒", 2), ("1.5秒", 3), ("2秒", 4), ("2.5秒", 5), ("3秒", 6), ("3.5秒", 7));
config(LISTVAL, "软关机长按时间选择", "长按PWRKEY多长时间后软关机", PWROFF_PRESS_TIME, BIT, 3, 3, 8, ("1.5秒", 0), ("2秒", 1), ("2.5秒", 2), ("3秒", 3), ("3.5秒", 4), ("4秒", 5), ("4.5秒", 6), ("5秒", 7));
config(CHECK, "AUX功能", "是否打开AUX输入功能，或插入AUX线关机功能。", FUNC_AUX_EN, 0);
config(LEVEL, 0x00);
config(CHECK, "SYS_RESV0", "SYS_RESV0", LT_SA_EN, 0);
config(CHECK, "SYS_RESV1", "SYS_RESV1", LT_CHG_EN, 0, LT_SA_EN);
config(LEVEL, 0x03);
config(CHECK, "配置提示音", "是否提示音可配置？", TONE_CONFIG_EN, 0);
config(LEVEL, 0x00);
config(CHECK, "是否使能EQ", "是否使能EQ", EQ_EN, 1);
config(LEVEL, 0x03);
config(CHECK, "EQ调试（蓝牙串口）", "是否使用SPP调试EQ功能", EQ_DGB_SPP_EN, 0, EQ_EN);
config(CHECK, "EQ调试（UART）", "是否使用UART调试EQ功能", EQ_DGB_UART_EN, 0, EQ_EN);
config(LISTVAL, "EQ调试串口选择", "选择调试串口的IO", EQ_UART_SEL, BIT, 2, 0, 4, ("VUSB", 0), ("PA7", 1), ("PB3", 2), ("PB4", 3), EQ_DGB_UART_EN);
config(CHECK, "PWRKEY模拟硬开关", "是否使用PWRKEY模拟硬开关", PWRKEY_2_HW_PWRON, 0);
config(LISTVAL, "马达控制IO选择", "选择MOTOR的控制IO, 输出高电平马达振动。", MOTOR_IO_SEL, BIT, 3, 0, 8, ("None", 0), ("PA6", 1), ("PA7", 2), ("PB3", 3), ("PB4", 4), ("PE0", 5), ("PE7", 6), ("PF2", 7));
config(CHECK, "马达振动时间配置", "是否配置马达振动时间", MOTOR_TIME_CFG_EN, 0);
config(LISTVAL, "氛围灯控制IO选择", "选择音乐氛围灯控制的GPIO，高电平亮，低电平灭。", ATMOS_LED_IO_SEL, BIT, 3, 0, 8, ("None", 0), ("PA6", 1), ("PA7", 2), ("PB3", 3), ("PB4", 4), ("PE0", 5), ("PE7", 6), ("PF2", 7));
config(CHECK, "氛围灯上电默认亮", "是否上电开机默认亮氛围灯亮", ATMOS_LED_DEFAULT_ON, 0);
config(LEVEL, 0x00);
config(CHECK, "打开PB3调试信息", "是否打开PB3调试信息", UART0_PRINTF_EN, 0);
config(CHECK, "eeprom记忆", "是否使用eeprom保存记忆信息，否则使用内部RTCRAM记忆。", E2P_MEM_EN, 0);
config(CHECK, "Flash方案", "是否跑flash方案", FLASH_EN, 1);
config(LEVEL, 0x03);
config(CHECK, "打开NTC功能", "是否使能NTC功能, 高于55度自动关机。可以调整ADC值改变需要关机的温度", SYS_NTC_EN, 0);
config(CHECK, "NTC使用内部10K上拉", "是否使用内部10K上拉，否则使用外部10K上拉", NTC_USER_INNER_PU, 0, SYS_NTC_EN);
config(LISTVAL, "NTC的ADC通路选择", "选择NTC的ADC检测通路", NTC_ADC_CH, BIT, 3, 5, 6, ("ADCCH_PA6", 1), ("ADCCH_PA7", 2), ("ADCCH_PB3", 3), ("ADCCH_PB4", 4), ("ADCCH_PE7", 5), ("ADCCH_PF2", 6), SYS_NTC_EN);
config(BIT, "NTC关机的ADC阈值", "配置NTC关机的ADC阈值", NTC_THD_VAL, 8, 0, 255, 70, SYS_NTC_EN);
config(CHECK, "电池电量检测PEAK滤波", "电池电量检测使用峰峰值滤波方法，适用于电源波动大的音箱方案。否则采用的平均值滤波算法。", VBAT_PEAK_FILTER_EN, 0);

config(SUB, "电源配置", "电源的相关配置");
config(CHECK, "BUCK MODE", "是否设置为BUCK MODE", BUCK_MODE_EN, 0);
config(RELATE, BUCK_MODE_EN, !1);
config(CHECK, "VDDIO省电容", "是否VDDIO省电容，只能LDO模式才能capless", VDDIO_CAPLESS_EN, 0);
config(CHECK, "VDDBT省电容", "是否VDDBT省电容，只能LDO模式才能capless", VDDBT_CAPLESS_EN, 1);
config(RELATE, VDDIO_CAPLESS_EN, !1);
config(CHECK, "VBAT省电容", "是否VBAT省电容，只能LDO模式且VDDIO有电容的情况", VBAT_CAPLESS_EN, 0);
config(RELATE)
config(LISTVAL, "VDDIO电压", "选择VDDIO电压", VDDIO_SEL, BIT, 2, 1, 4, ("3.0V", 0), ("3.1V", 1), ("3.2V", 2), ("3.3V", 3));
config(LEVEL, 0x00);
config(LISTVAL, "VDDCORE电压", "选择VDDCORE电压", VDDCORE_SEL, BIT, 3, 3, 8, ("0.925V", 0), ("0.95V", 1), ("0.975V", 2), ("1.0V", 3), ("1.025", 4), ("1.05V", 5), ("1.075V", 6), ("1.10V", 7));
config(LISTVAL, "VDDBT电压", "选择VDDBT电压", VDDBT_SEL, BIT, 4, 15, 9, ("1.2V", 7), ("1.25V", 8), ("1.3V", 9), ("1.35V", 10), ("1.4V", 11), ("1.45V", 12), ("1.5V", 13), ("1.55V", 14), ("1.6V", 15));
config(LEVEL, 0x03);
config(LISTVAL, "LVD电压", "选择LVD的电压", LVD_SEL, BIT, 2, 2, 4, ("1.8V", 0), ("2.0V", 1), ("2.2V", 2), ("2.4V", 3));
config(LEVEL, 0x00);
config(CHECK, "BUCK限流关闭", "是否关闭BUCK限流", BUCK_CLIMIT_DIS, 0, BUCK_MODE_EN);
config(BIT, "BUCK频率", "BUCK频率选择", BUCK_FREQ_SEL, 3, 0, 7, 3, BUCK_MODE_EN);
config(BIT, "BUCK NMOS驱动", "enhance the nmos drive of NMOS", BUCK_NMOS_SEL, 2, 0, 3, 1, BUCK_MODE_EN);
config(BIT, "BUCK PMOS驱动", "enhance the pmos drive of PMOS", BUCK_PMOS_SEL, 1, 0, 1, 1, BUCK_MODE_EN);
config(CHECK, "PLL模拟二分找BAND", "是否PLL模拟二分找BAND", PLL0_ANL_TRIM_BAND_EN, 0);
config(LEVEL, 0x03);

config(SUB, "DAC配置", "DAC的相关配置");
config(LISTVAL, "DAC声道选择", "选择DAC的输出方式", DAC_SEL, BIT, 3, 0, 6, ("VCMBUF单声道", 0), ("VCMBUF双声道", 1), ("差分单声道", 2), ("差分双声道", 3), ("单端单声道", 4), ("单端双声道", 5));
config(LISTVAL, "VDDPA电压", "选择VDDPA电压, 从VDDBT取电, 故必须小于VDDBT的电压。", DAC_LDOH_SEL, BIT, 2, 0, 4, ("1.25V", 0), ("1.3V", 1), ("1.35V", 2), ("1.4V", 3));
config(CHECK, "VDDPA BYPASS", "是否VDDPA BYPASS, vref select AVDD。 bypass后VDDBT可以调更低。", VDDPA_BYPASS_EN, 0);
config(CHECK, "VDDMIC电源使能", "是否VDDMIC电源常输出，LT方案用于MIC供电及按键上拉电源", VDDMIC_ALWAYS_ON, 0, LT_SA_EN);
config(LEVEL, 0x00);
config(CHECK, "DAC DIG DCOC关闭", "DAC DIG DCOC", DAC_PA_DCOC_DIS, 0);
config(LEVEL, 0x03);
config(CHECK, "DAC输出采样率48K", "DAC输出采样率是否48K，默认44.1K采样率输出。EQ工具上需要选择对应的采样率。", DAC_OUT_SPR, 0);
config(CHECK, "DAC动态降噪", "是否使能DAC动态降噪功能", DAC_DNR_EN, 1);
config(CHECK, "DAC左右声道互换", "是否交换DAC的左右声道", DAC_CHANNEL_EXCHANGE_EN, 0);
config(CHECK, "DAC左声道相位取反", "是否DAC左声道相样取反", DACL_PHASE_INV_EN 0);
config(CHECK, "DAC右声道相位取反", "是否DAC右声道相样取反", DACR_PHASE_INV_EN 0);
config(CHECK, "蓝牙未连接时关闭DAC", "蓝牙未连接时自动关闭DAC", DAC_OFF_FOR_BT_DISCONN, 0);
config(LISTVAL, "DAC最大音量", "配置系统最大模拟增益，自动调整音量表。", DAC_MAX_GAIN, BIT, 3, 0, 8, ("0DB", 0), ("-1DB", 1), ("-2DB", 2), ("-3DB", 3), ("-4DB", 4), ("-5DB", 5), ("-6DB", 6), ("-7DB", 7));
config(LISTVAL, "通话最大音量", "配置通话时最大模拟增益，自动调整音量表。", BT_CALL_MAX_GAIN, BIT, 3, 0, 8, ("0DB", 0), ("-1DB", 1), ("-2DB", 2), ("-3DB", 3), ("-4DB", 4), ("-5DB", 5), ("-6DB", 6), ("-7DB", 7));
config(BIT, "DAC后级数字增益选择", "设置DAC后级数字增益", DAC_CIC_GAIN, 5, 0, 31, 27);
config(BIT, "PianoTone音量控制", "设置PianoTone提示音的音量", PIANO_TONE_VOL, 4, 0, 15, 15);

config(SUB, "充电配置", "充电功能的相关配置");
config(CHECK, "充电使能", "是否打开充电功能", CHARGE_EN, 1);
config(CHECK, "插入DC复位系统", "是否插入DC充电复位系统，用于防止系统死机", CHARGE_DC_RESET, 1, CHARGE_EN);
config(CHECK, "插入DC禁止软开机", "PWRKEY软开机，DC Online时，禁止软开机", CHARGE_DC_NOT_PWRON, 1, CHARGE_EN);
config(LISTVAL, "充电时间限制", "充电时间限制，防止某些耳机电池充不满，一直处于充电状态", CHARGE_LIMITED_TIME, BIT, 3, 0, 7, ("不限制", 0), ("2小时", 1), ("2.5小时", 2), ("3小时", 3), ("3.5小时", 4), ("4小时", 5), ("5小时", 6), CHARGE_EN);
config(LISTVAL, "充电截止电压", "充电截止电压，根据耳机电池规格选择", CHARGE_STOP_VOLT, BIT, 3, 4, 8, ("4.08V", 0), ("4.10V", 1), ("4.13V", 2), ("4.16V", 3), ("4.2V", 4), ("4.23V", 5), ("4.26V", 6), ("4.29V", 7), CHARGE_EN);
config(LISTVAL, "充电截止电流", "选择充电截止电流", CHARGE_STOP_CURR, BIT, 4, 4, 12, ("2.5mA", 1), ("5mA", 2), ("7.5mA", 3), ("10mA", 4), ("12.5mA", 5), ("15mA", 6), ("17.5mA", 7), ("20mA", 8), ("22.5mA", 9), ("25mA", 10), ("27.5mA", 11), ("30mA", 12), CHARGE_EN);
config(LISTVAL, "恒流充电电流", "恒流充电（电池电压大于3.0v）电流", CHARGE_CONSTANT_CURR, BIT, 5, 6, 28, ("5mA", 0), ("10mA", 1), ("15mA", 2), ("20mA", 3), ("25mA", 4), ("30mA", 5), ("35mA", 6), ("40mA", 7), ("45mA", 8), ("50mA", 9), ("55mA", 10), ("60mA", 11), ("65mA", 12), ("70mA", 13), ("75mA", 14), ("80mA", 15), ("90mA", 16), ("100mA", 17), ("110mA", 18), ("120mA", 19), ("130mA", 20), ("140mA", 21), ("150mA", 22), ("160mA", 23), ("170mA", 24), ("180mA", 25), ("190mA", 26), ("200mA", 27), CHARGE_EN);
config(LISTVAL, "涓流充电电流", "涓流充电（电池电压小于3.0v）电流", CHARGE_TRICKLE_CURR,  BIT, 3, 2, 8,  ("5mA", 0), ("10mA", 1), ("15mA", 2), ("20mA", 3), ("25mA", 4), ("30mA", 5), ("35mA", 6), ("40mA", 7), CHARGE_EN);
config(LEVEL, 0x00);
config(LISTVAL, "充满时截止电流占比阈值", "充满时截止电流占比阈值选择", CH_STOP_CURR_THD, BIT, 2, 1, 4, ("15", 0), ("30", 1), ("45", 2), ("60", 3), CHARGE_EN);
config(LEVEL, 0x03);
config(CHECK, "充电时进入低功耗模式", "充电时进入低功耗模式, 减少主控从VUSB的耗电。", CHARGE_LOWPWR_EN, 1, CHARGE_EN);
config(CHECK, "充满电自动关机", "电池充满自动关机功能，主要用于放入电池仓充电的选项", CH_FULL_AUTO_PWRDWN_EN, 1, CHARGE_EN);
config(CHECK, "耳机进入充电前先复位", "耳机进入充电模式前是否先复位", BT_ENTER_CHARGE_RST_EN, 0, CHARGE_EN);
config(CHECK, "充电仓功能", "是否使能充电仓功能", CHBOX_EN, 1, CHARGE_EN);
config(LISTVAL, "充电仓类型选择", "选择正确类型充电仓，确保充满关机和拿起开机功能正常", CH_BOX_TYPE_SEL, BIT, 2, 0, 4, ("兼容5V短暂掉0V后维持电压", 0), ("5V不掉电的充电仓", 1), ("5V掉电但有维持电压", 2), ("5V完全掉电无维持电压", 3), CHBOX_EN);
config(LISTVAL, "仓允许最低维持电压", "inbox信号电压，即充电仓允许的最低维持电压", CH_INBOX_SEL, BIT, 1, 0, 2, ("1.7V", 0), ("1.1V", 1), CHBOX_EN);
config(LISTVAL, "入仓VUSB漏电配置", "入仓时唤醒充电仓", CH_LEAKAGE_SEL, BIT, 3, 1, 7, ("None", 0), ("漏电电流90uA", 1), ("漏电电流180uA", 2), ("漏电电流270uA", 4), ("漏电电流360uA", 5), ("漏电电流450uA", 6), ("漏电电流540uA", 7),  CHBOX_EN);
config(LISTVAL, "出仓VUSB漏电配置", "加速耳机出仓时VUSB掉电速度, 加速拿起自动开机", CH_OUT_LEAKAGE_SEL, BIT, 2, 0, 4, ("None", 0), ("漏电电流90uA", 1), ("漏电电流180uA", 2), ("漏电电流270uA", 3),  CHBOX_EN);
config(CHECK, "从充电仓拿出自动开机", "耳机从充电仓拿出自动开机，注意充满后电池仓自动断电的不能开此选项", CH_OUT_AUTO_PWRON_EN, 1, CHBOX_EN);
config(CHECK, "耳机出仓播放开机提示音", "耳机从充电仓内拔出是否播放开机音", BT_OUTBOX_VOICE_PWRON_EN, 0, CHBOX_EN);
config(BIT, "短暂掉0V的仓稳定检测时间", "短暂掉0V的仓稳定检测时间: 500ms + n*100ms", CHBOX_OUT_DELAY,  4, 0, 15, 1, CHBOX_EN);
config(CHECK, "入仓耳机关机", "耳机在仓内且是维持电压时，是否关机。", CHG_INBOX_PWRDWN_EN, 1, CHBOX_EN);
config(LISTVAL, "充满关机前等仓休眠的时间", "维持电压的仓，耳机充满需要先等仓进入休眠再关机, 否则再次开仓5V不能唤醒耳机。", CH_W4_OFF_SEL, BIT, 2, 2, 4, ("None", 0), ("40秒", 1), ("1分钟", 2), ("2分钟", 3), CHBOX_EN);
config(CHECK, "昇生微智能充电仓", "昇生微智能充电仓, VUSB通信, 自动打开三真电量功能", CHBOX_SMART_EN, 0, CHBOX_EN);

config(SUB, "蓝牙配置", "蓝牙的相关配置");
config(LEVEL, 0x00);
config(CHECK, "蓝牙名称配置", "是否使能配置蓝牙名称，否则选择本地蓝牙名称。", BT_NAME_CONFIG_EN, 1);
config(CHECK, "蓝牙地址配置", "是否使能配置蓝牙地址，否则选择本地随机蓝牙地址。", BT_ADDR_CONFIG_EN, 1);
config(LEVEL, 0x03);
config(CHECK, "蓝牙名称加编号后缀", "打开此功能, 蓝牙名称会自动将蓝牙地址后4byte当作编号。蓝牙地址用自增模式可实现蓝牙名称编号自增功能", BT_NAME_SUFFIX_EN, 0, BT_ADDR_CONFIG_EN);
config(LEVEL, 0x00);
config(LISTVAL, "预设蓝牙名称选择", "选择预设蓝牙名称, 蓝牙名称配置关闭的情况下才会使用选择的预设蓝牙名称。", BT_LOCAL_NAME_SEL, BIT, 5, 0, 30, ("Bluetooth music", 0), ("Bluetooth Music", 1), ("S6", 2), ("S530", 3), ("M165", 4), ("LT", 5), ("LT-AP", 6), ("I7-TWS", 7), ("I9-TWS", 8), ("TWS-i7", 9), ("I8-TWS", 10), ("i7s", 11), ("i9s", 12), ("i11", 13), ("I7", 14), ("X18", 15), ("I8X", 16), ("X8S", 17), ("i7", 18), ("I8", 19), ("I9", 20), ("i12", 21), ("i13", 22), ("i7S-TWS", 23), ("TWS", 24), ("Pro 4", 25), ("Pro 5", 26), ("A7S", 27), ("E7S", 28), ("W100", 29));
config(LEVEL, 0x03);
config(LISTVAL, "长按几秒开机进配对状态", "是否支持长按N秒开机直接进入配对状态", BT_PWRKEY_NSEC_DISCOVER, BIT, 3, 4, 8, ("不支持", 0), ("2秒", 1), ("3秒", 2), ("4秒", 3), ("5秒", 4), ("6秒", 5), ("7秒", 6), ("8秒", 7));
config(CHECK, "长按N秒进配对后清配对信息", "关机状态长按N秒开机进配对后清除全部配对信息", BT_PWRKEY_NSEC_CLR_PAIR_EN, 0);
config(CHECK, "关闭蓝牙提前初始化", "是否关闭蓝牙提前上电初始化，提前初始化可以加速上电回连。某些无功放MUTE的音箱可能需要关闭", BT_INIT_FAST_DIS, 0);
config(CHECK, "未连接允许进休眠模式", "蓝牙未连接, 是否允许进入休眠模式。 休眠模式闪灯方式会变。", BT_PAIR_SLEEP_EN, 0);
config(CHECK, "是否支持一直回连手机", "是否支持一直回连手机", BT_ALWAYS_RECONN, 0);
config(LISTVAL, "远距离断开后超时回连时间", "远距离断开之后，超时回连的时间配置", BT_TOUT_RECONN_TIMES, BIT, 2, 1, 4, ("1分钟", 0), ("2分钟", 1), ("4分钟", 2), ("一直回连", 3));
config(CHECK, "配对提示音", "是否播放配对提示音", WARNING_BT_PAIR, 1);
config(CHECK, "连接两部手机功能", "是否支持连接两部手机功能", BT_2ACL_EN, 0);
config(CHECK, "点击播放自动切换手机", "连接两部手机时是否支持点击播放切换到对应的手机", BT_2ACL_AUTO_SWITCH, 0, BT_2ACL_EN);
config(CHECK, "音乐播放功能", "是否支持蓝牙音乐播放功能", BT_A2DP_EN, 1);
config(CHECK, "DELAY REPORT功能", "是否支持AVDTP DELAY REPORT功能", BT_A2DP_DELAY_REPORT_EN, 1, BT_A2DP_EN);
config(CHECK, "AAC蓝牙音乐", "是否支持AAC蓝牙音乐", BT_AAC_AUDIO_EN, 1, BT_A2DP_EN);
config(LEVEL, 0x00);
config(LISTVAL, "蓝牙AAC码率", "A2DP AAC码率选择", BT_AAC_BIT_RATE,  BIT, 2, 0, 4, ("128kbit/s", 0), ("165kbit/s", 1), ("192kbit/s", 2), ("不限制", 3), BT_AAC_AUDIO_EN);
config(LEVEL, 0x03);
config(LISTVAL, "蓝牙音乐正常模式延时", "蓝牙音乐正常模式延时, 延时越小对RF要求越高", A2DP_NORMAL_MODE_LATENCY, BIT, 3, 0, 8,  ("150ms", 1),   ("180ms", 2),   ("210ms", 3),   ("240ms", 4),  ("270ms", 5),   ("300ms", 0),   ("330ms", 6),   ("360ms", 7), BT_A2DP_EN);
config(LISTVAL, "蓝牙音乐游戏模式延时", "蓝牙音乐游戏模式延时, 需要配合<Game切换>按键使用", A2DP_GAME_MODE_LATENCY,   BIT, 2, 0, 4,  ("80ms", 1),    ("100ms", 0),   ("120ms", 2),   ("140ms", 3), BT_A2DP_EN);
config(CHECK, "通话功能", "是否支持蓝牙通话的功能", BT_SCO_EN, 1);
config(CHECK, "mSBC高清通话", "是否支持mSBC高清通话", BT_SCO_MSBC_EN, 1, BT_SCO_EN);
config(CHECK, "强制私密接听功能", "是否强制使用私密接听（手机端接听）", BT_HFP_PRIVATE_EN, 0, BT_SCO_EN);
config(CHECK, "手机与耳机通话切换", "是否使能手机端与耳机端通话切换, 长按HSF类按键切换(私密接听切换)", BT_HFP_PRIVATE_SWITCH_EN, 0, BT_SCO_EN);
config(CHECK, "通话静音开启与关闭", "是否使能通话静音开启与关闭(静音就是远端听不到声音), 双击HSF类按键切换", BT_HFP_MUTE_SWITCH_EN, 0, BT_SCO_EN);
config(CHECK, "通话最小级音量时静音", "是否通话时音量调到最小级数后静音", BT_HFP_ZERO_VOL_EN, 0, BT_SCO_EN);
config(CHECK, "来电报号功能", "是否支持来电报号功能", BT_HFP_RING_NUMBER_EN, 1, BT_SCO_EN);
config(LISTVAL, "报号前先响几次铃声", "报号前先响几次铃声", BT_HFP_RINGS_BEFORE_NUMBER, BIT, 2, 0, 4, ("直接报号", 0), ("先响1次", 1), ("先响2次", 2), ("先响3次", 3), BT_HFP_RING_NUMBER_EN);
config(LISTVAL, "来电响铃间隔", "来电响铃间隔时间配置", BT_RING_TICKS_SEL, BIT, 3, 4, 8, ("0.5秒", 0), ("1.0秒", 1), ("1.5秒", 2), ("2.0秒", 3), ("2.5秒", 4), ("3.0秒", 5), ("3.5秒", 6), ("4.0秒", 7), BT_SCO_EN);
config(CHECK, "来电播放手机铃声", "打开此功能后，可以播放手机铃声, 部分安卓机不支持。", BT_HFP_INBAND_RING_EN, 0, BT_SCO_EN);
config(CHECK, "电量显示功能", "是否支持电量显示功能", BT_HFP_BAT_REPORT_EN, 1, BT_SCO_EN);
config(CHECK, "电量非线性变化", "支持电量显示功能时，是否需要电量非线性变化", BT_BAT_NON_LINEAR_EN, 0, BT_HFP_BAT_REPORT_EN);
config(LISTVAL, "电量计算的满电电压", "耳机满电电压配置，此配置影响计算传给手机的电量比例。", BT_VBAT_MAX_VOLT, BIT, 3, 5, 8, ("4.08V", 0), ("4.10V", 1), ("4.12V", 2), ("4.14V", 3), ("4.16V", 4), ("4.18V", 5), ("4.20V", 6), ("4.22V", 7), BT_HFP_BAT_REPORT_EN);
config(CHECK, "手机音量同步功能", "是否支持蓝牙音乐与手机音量同步功能", BT_A2DP_VOL_CTRL_EN, 0, BT_A2DP_EN);
config(CHECK, "蓝牙HID方式音量同步", " 通过蓝牙HID按键report方式调手机音量，可以兼容不支持音量同步的手机，需要先打开蓝牙HID功能。", BT_HID_VOL_CTRL_EN, 0, BT_A2DP_VOL_CTRL_EN);
config(CHECK, "HID音量同步不支持安卓", "是否蓝牙HID音量同步仅支持ios", BT_HID_IOS_ONLY_EN, 0, BT_HID_VOL_CTRL_EN);
config(CHECK, "断开手机连接后恢复默认音量", "打开手机音量同步的情况时，是否断开手机连接后恢复默认音量。为了适应某些安卓机不支持音量同步。", BT_VOL_RESET_FOR_DISCON_EN, 0, BT_A2DP_VOL_CTRL_EN);
config(CHECK, "支持鸿蒙系统的音量同步", "支持鸿蒙系统的音量同步开关自动打开。左右耳需要同时开或关此功能，否则不能配对。", BT_VOL_CTRL_HMOS_EN, 0, BT_A2DP_VOL_CTRL_EN);
config(CHECK, "蓝牙连接自动播放功能", "是否支持蓝牙连接后自动开始播放", BT_AUTOPLAY_EN, 0, BT_A2DP_EN);
config(CHECK, "关闭断线回连恢复播放功能", "是否关闭蓝牙远距离断线回连后，恢复播放的功能", BT_RECON_PLAY_DIS, 0, BT_A2DP_EN);
config(CHECK, "加快播放暂停响应", "是否支持手机播放状态同步，可加快播放暂停响应速度", BT_A2DP_AVRCP_PLAY_STATUS, 0, BT_A2DP_EN);
config(CHECK, "SPP串口功能", "是否支持蓝牙串口的功能", BT_SPP_EN, 0);
config(CHECK, "SPP调试通话参数", "是否支持蓝牙SPP在线调试通话参数功能", BT_SCO_DBG_EN, 0, BT_SPP_EN);
config(CHECK, "SPP分析信号质量", "是否支持BT-Assistant工具分析信号质量", BT_TWS_DBG_EN, 0, BT_SPP_EN);
config(CHECK, "HID拍照功能", "是否支持蓝牙HID拍照的功能(双击VOL-或VOL+)", BT_HID_EN, 0);
config(CHECK, "按键HID连接/断开功能", "是否支持蓝牙HID服务按键(双击VOL-或VOL+)连接/断开", BT_HID_MENU_EN, 0, BT_HID_EN);
config(CHECK, "HID默认不连接", "HID服务默认不连接，需要按键手动连接", BT_HID_DISCON_DEFAULT_EN, 0, BT_HID_EN);
config(LISTVAL, "HID兼容模式", "HID兼容模式配置", BT_HID_MODE_SEL, BIT, 2, 0, 3, ("耳机电量图标，兼容软键盘", 0), ("耳机电量图标，兼容拍照", 1), ("键盘图标，兼容拍照", 2), BT_HID_EN);
config(LISTVAL, "双击VOL-功能选择", "双击VOL-拍照选择HID Report或Service开关", BT_HID_VOLDOWN_SEL, BIT, 2, 1, 4, ("None", 0), ("发送VOL+消息拍照", 1), ("发送VOL-消息拍照", 2), ("HID服务连接/断开", 3), BT_HID_EN);
config(LISTVAL, "双击VOL+功能选择", "双击VOL+拍照选择HID Report或Service开关", BT_HID_VOLUP_SEL,   BIT, 2, 3, 4, ("None", 0), ("发送VOL+消息拍照", 1), ("发送VOL-消息拍照", 2), ("HID服务连接/断开", 3), BT_HID_EN);
config(LEVEL, 0x00);
config(CHECK, "蓝牙快速测试", "蓝牙快速测试功能", IPHONE_HEAD_QUICK_TEST_EN, 0);
config(LEVEL, 0x03);

config(SUB, "TWS配置", "TWS的相关配置");
config(CHECK, "TWS功能", "是否支持TWS", BT_TWS_EN, 1);
config(CHECK, "TWS快速连接", "是否打开TWS快速连接功能", BT_TWS_FAST_CON_EN, 1, BT_TWS_EN);
config(BIT, "TWS快配时间限制", "TWS上电、出仓配对限制时间, 单位200ms, 0为不限制。", BT_TWS_LIMIT_PAIR_TIME, 4, 0, 15, 0, BT_TWS_FAST_CON_EN);
config(CHECK, "TWS配对生成新地址", "是否支持TWS配对后生成新地址连接手机", BT_TWS_PUBLIC_ADDR, 0, BT_TWS_EN);
config(CHECK, "TWS单次配对功能", "TWS配对后需要按键清除配对信息后，才能再次配对", BT_TWS_SINGLE_PAIR, 0, BT_TWS_EN);
config(LISTVAL, "TWS配对方式选择", "选择TWS配对方式", BT_TWS_PAIR_MODE, BIT, 3, 0, 6, ("自动配对", 0), ("快速连接(不回连)", 1), ("双击USER_DEF键配对", 2), ("单击USER_DEF配对", 3), ("长按USER_DEF配对", 4), ("双击MODE/POWER键配对", 5), BT_TWS_EN);
config(LISTVAL, "TWS声道分配选择", "选择TWS声道分配方式", BT_TWS_LR_MODE, BIT, 3, 2, 6, ("不分配，主副均双声道输出", 0), ("自动分配，主右声道副左声道", 1), ("自动分配，主左声道副右声道", 2), ("GPIOx接地为左声道", 3), ("配置选择为左声道", 4), ("配置选择为右声道", 5), BT_TWS_EN);
config(LISTVAL, "TWS声道GPIOx", "GPIOx有接地为左声道", TWS_SEL_LEFT_GPIO_SEL, BIT, 3, 0,  8, ("None", 0), ("PA6", 1), ("PA7", 2), ("PB3", 3), ("PB4", 4), ("PE0", 5), ("PE7", 6), ("PF2", 7), BT_TWS_EN);
config(CHECK, "TWS蓝牙名加L或R后缀", "是否使能TWS蓝牙名称加L或R后缀, 需要GPIOx固定左右耳", BT_TWS_NAME_SUFFIX_EN, 0, BT_TWS_EN);
config(LISTVAL, "TWS连接成功提示音", "TWS左右耳配对成功提示音选择", BT_TWS_LR_VOICE_SEL, BIT, 1, 1, 2, ("异步播声道提示音", 0), ("同步播连接成功提示音", 1), BT_TWS_EN);
config(LEVEL, 0x00);
config(LISTVAL, "TWS SBC码率选择", "TWS SBC bitpool", BT_TWS_SBC_BITPOOL, BIT, 2, 0, 4, ("32", 2), ("39", 0), ("45", 1), ("53", 3), BT_TWS_EN);
config(LEVEL, 0x03);
config(CHECK, "TWS主从切换功能", "是否支持TWS主从自动切换功能", BT_TSWI_EN, 1, BT_TWS_EN);
config(CHECK, "TWS按键关机支持主从切换", "TWS按键手动关机是否自动切换主从, 否则同步关机", BT_TSWI_KPWR_EN, 1, BT_TSWI_EN);
config(CHECK, "TWS音乐模式支持主从切换", "TWS音乐模式,根据主副耳信号质量自动主从切换", BT_TSWI_MSC_EN, 0, BT_TSWI_EN);
config(CHECK, "TWS通话模式支持主从切换", "TWS通话模式,根据主副耳信号质量自动主从切换", BT_TSWI_SCO_EN, 0, BT_TSWI_EN);
config(CHECK, "TWS低电关机支持主从切换", "TWS某只耳机低电关机时自动主从切换, 否则左右耳同步关机", BT_TSWI_LOWPWR_EN, 1, BT_TSWI_EN);
config(CHECK, "TWS耳机电量支持主从切换", "根据TWS耳机电量自动进行主从切换, 用于平衡左右耳电量", BT_TSWI_VBAT_EN, 0, BT_TSWI_EN);
config(CHECK, "TWS双边语音(提示音)", "TWS提示音双边同时播报", BT_TWS_VOICE_SYNC_EN, 0, BT_TWS_EN);
config(CHECK, "TWS配对匹配扩展字", "TWS配对匹配2字节的扩展字，将关闭蓝牙名的匹配，用于实现同一机型不同蓝牙名也可对联", BT_TWS_EXT_NANE_EN, 0, BT_TWS_EN);
config(BIT, "TWS配对扩展字", "TWS主副配对的扩展字标识, 用于区分不同机型", BT_TWS_EXT_NAME, 16, 0, 65535, 0, BT_TWS_EXT_NANE_EN);
config(CHECK, "VUSB快测快配功能", "VUSB UART快速测试及快速配对功能使能", QTEST_EN, 0);
config(CHECK, "VUSB快测连接后打开5V复位", "VUSB UART快速/快配通信成功后，是否打开5V复位功能。", QTEST_DC5V_RESET_EN, 0, QTEST_EN);
config(LEVEL, 0x00);
config(CHECK, "VUSB快配时固定声道", "VUSB快配时分配固定声道并写入OTP", QTEST_CH_WR_OTP_EN, 0, QTEST_EN);
config(BIT, "BT_RESVM", "BT_RESVM", BT_RESVM, 8, 0, 255, 0);

config(BIT, "BT_RESVP", "BT_RESVP", BT_RESVP, 19, 0, 255, 0);
config(LEVEL, 0x03);

config(SUB, "基带配置", "基带的相关配置");
config(CHECK, "正常连接模式使能DUT测试", "正常连接模式，是否打开DUT测试功能", BB_DUT_TEST_EN, 0);
config(CHECK, "五击按键进DUT模式", "是否使能5击按键进入DUT测试模式,固定蓝牙地址,红灯常亮", BB_DUT_TEST_K5S_EN, 0);
config(CHECK, "DUT测试模式固定蓝牙地址", "按键进入DUT测试模式是否固定蓝牙地址68:68:68:68:68:68", BB_DUT_TEST_ADDR_FIXED_EN, 0, BB_DUT_TEST_K5S_EN);
config(CHECK, "DUT测试模式使能EDR 3M包", "DUT测试模式使能EDR 3M包", BB_DUT_TEST_EDR3M_EN, 0, BB_DUT_TEST_K5S_EN);
config(CHECK, "兼容CRY测试仪连接", "是否优化CRY蓝牙测试仪连接速度", BB_BT_CRY_FAST_EN, 0);
config(LEVEL, 0x00);
config(CHECK, "关闭TXNAK功能", "是否关闭TXNAK功能", BB_TX_CRC_NAK_DIS, 0);
config(CHECK, "关闭sleep外部唤醒功能", "是否关闭sleep外部唤醒功能", BB_EXT_WAKEUP_DIS, 0);
config(LISTVAL, "蓝牙版本号",  "蓝牙版本号", BT_VER_MAJOR_SEL,  BIT, 1, 1, 2, ("5.3", 0), ("5.4", 1));
config(BIT, "T2R_DELAY", "配置T2R延迟", BB_BT_T2R_DELAY,  4, 0, 15, 0);
config(BIT, "TXPWRUP_DELAY", "配置TXPWRUP时间", BB_BT_TX_PWRUP,  8, 0, 255, 90);
config(BIT, "RXPWRUP_DELAY", "配置RXPWRUP时间", BB_BT_RX_PWRUP,  8, 0, 255, 90);
config(BIT, "SYNC容错", "配置ACCESS CODE容错bit数", BB_NB_SYNC_ERR,  4, 0, 15, 7);
config(LEVEL, 0x03);
config(LISTVAL, "降低未连接时TX功率", "降低降低未连接时TX功率, 减少干扰声", BT_RF_DEC_TXPWR, BIT, 2, 2, 4, ("不降低", 0), ("降低3dbm", 1), ("降低6dbm", 2), ("降低9dbm", 3));
config(CHECK, "通话RF参数", "是否单独配置通话RF参数", RF_PARAM_SCO_EN, 0);
config(BIT, "通话MIX_GAIN0", "通话MIX_GAIN0", RF_MIX_GAIN_SCO, 3, 0, 6, 5, RF_PARAM_SCO_EN);
config(BIT, "通话DIG_GAIN0", "通话DIG_GAIN0", RF_DIG_GAIN_SCO, 6, 20, 58, 55, RF_PARAM_SCO_EN);
config(BIT, "PA_GAIN0",  "PA_GAIN0",  RF_PA_GAIN0,  3, 0, 7, 7);
config(BIT, "MIX_GAIN0", "MIX_GAIN0", RF_MIX_GAIN0, 3, 0, 6, 5);
config(BIT, "DIG_GAIN0", "DIG_GAIN0", RF_DIG_GAIN0, 6, 20, 58, 55);
config(BIT, "CAPTUNE_VL", "低channel CAPTUNE",  RF_CAPTUNE_VL,  4, 0, 15, 8);
config(BIT, "CAPTUNE_VH", "高channel CAPTUNE",  RF_CAPTUNE_VH,  4, 0, 15,  7);
config(LEVEL, 0x00);
config(BIT, "PA_VCASN2", "PA_VCASN2",  DI_PA_VCASN2,  3, 0, 7, 1);
config(BIT, "PA_VCASN",  "PA_VCASN",   DI_PA_VCASN,   3, 0, 7, 7);
config(LISTVAL, "PA_NBIAS",  "PA_NBIAS",   DI_PA_NBIAS,  BIT, 4, 5, 16, ("0", 0), ("2", 1), ("4", 2), ("6", 3), ("8", 4), ("10", 5), ("12", 6), ("14", 7), ("16", 8), ("18", 9), ("20", 10), ("22", 11), ("24", 12), ("26", 13), ("28", 14), ("30", 15));
config(BIT, "PA_CC_TX",  "PA_CC_TX",   DI_PA_CC_TX,   4, 0, 15, 15);
config(BIT, "LDO_VDDPA_VSEL",   "LDO_VDDPA_VSEL",    DI_LDO_VDDPA_VSEL,    3, 0, 7, 4);
config(BIT, "LDO_VDDVCO_VSEL",  "LDO_VDDVCO_VSEL",   DI_LDO_VDDVCO_VSEL,   3, 0, 7, 6);
config(BIT, "LDO_VDDLOOP_VSEL", "LDO_VDDLOOP_VSEL",  DI_LDO_VDDLOOP_VSEL,  3, 0, 7, 6);
config(LISTVAL, "SX_CP_CURRENT", "SX_CP_CURRENT",    DI_SX_CP_CURRENT,  BIT, 3, 1, 8, ("0", 0), ("2", 1), ("4", 2), ("6", 3), ("8", 4), ("10", 5), ("12", 6), ("14", 7));
config(LISTVAL, "SX_CP_OFFSET",  "SX_CP_OFFSET",     DI_SX_CP_OFFSET,   BIT, 4, 10, 16, ("0", 0), ("2", 1), ("4", 2), ("6", 3), ("8", 4), ("10", 5), ("12", 6), ("14", 7), ("16", 8), ("18", 9), ("20", 10), ("22", 11), ("24", 12), ("26", 13), ("28", 14), ("30", 15));
config(LISTVAL, "SX_VCO_BIAS",   "SX_VCO_BIAS",      DI_SX_VCO_BIAS,    BIT, 3, 6, 8, ("0", 0), ("2", 1), ("4", 2), ("6", 3), ("8", 4), ("10", 5), ("12", 6), ("14", 7));
config(LISTVAL, "LNA_BIAS_HG",   "LNA_BIAS_HG",      DI_LNA_BIAS_HG,    BIT, 3, 5, 8, ("1", 0), ("3", 1), ("5", 2), ("7", 3), ("9", 4), ("11", 5), ("13", 6), ("15", 7));
config(LISTVAL, "BQ2_DCOC_BIAS", "BQ2_DCOC_BIAS",    DI_BQ2_DCOC_BIAS,  BIT, 1, 0, 2, ("1", 0), ("0", 1));
config(BIT, "MIX_GATE_BIAS",   "MIX_GATE_BIAS", DI_MIX_GATE_BIAS, 3, 0, 7, 4);
config(BIT, "LE_GSG_DPHI_DEN",   "LE_GSG_DPHI_DEN",    LE_GSG_DPHI_DEN, 4, 0, 15, 6);
config(BIT, "BT_GSG_DPHI_DEN",   "BT_GSG_DPHI_DEN",    BT_GSG_DPHI_DEN, 4, 0, 15, 6);
config(BIT, "LE_GSG_DPHI_NOM",   "LE_GSG_DPHI_NOM",    LE_GSG_DPHI_NOM, 7, 0, 127, 67);
config(BIT, "BT_GSG_DPHI_NOM",   "BT_GSG_DPHI_NOM",    BT_GSG_DPHI_NOM, 7, 0, 127, 67);
config(LISTVAL, "AGC_GAIN表选择", "AGC_GAIN表选择",    AGC_GAIN_TBL_SEL, BIT, 2, 0, 4, ("标准表", 0), ("增强抗干扰表", 1), ("自动切换", 2), ("重烧回标准表", 3));
config(LISTVAL, "AGC_TARGET",  "AGCCON1[21:16]", AGC_TARGET_D, BIT, 3, 4, 8, ("22", 0), ("24", 1), ("26", 2), ("28", 3), ("30", 4), ("32", 5), ("34", 6), ("36", 7));
config(LISTVAL, "AGC_HIGH_GT",  "AGC_HIGH_HTGT(AGCCON1[15:12])/AGC_HIGH_LTGT(AGCCON1[11:8])", AGC_HIGH_GT, BIT, 2, 1, 4, ("4", 0), ("5", 1), ("6", 2), ("7", 3));
config(LISTVAL, "AGC_LOW_GT",  "AGC_LOW_HTGT(AGCCON1[7:4])/AGC_LOW_LTGT(AGCCON1[3:0])", AGC_LOW_GT, BIT, 2, 0, 4, ("3", 0), ("4", 1), ("5", 2), ("6", 3));
config(BIT, "RAMPING_DOWN",     "RAMPGENCON[15:8]",    RAMP_DOWN_STEP,  4, 0, 15, 10);
config(BIT, "RAMPING_UP",     	"RAMPGENCON[7:0]",     RAMP_UP_STEP,    4, 0, 15, 3);
config(LEVEL, 0x03);

config(SUB, "MIC参数", "蓝牙的MIC参数");
config(LISTVAL, "MIC去直流Fliter配置", "MIC去直流配置，省电容方案可以等效于调整电容参数", MIC_RMDC_SEL, BIT, 2, 0, 4, ("CutOff 30Hz", 0), ("CutOff 60Hz", 1), ("CutOff 120Hz", 2), ("CutOff 240Hz", 3), BT_SCO_EN);
config(LISTVAL, "MIC偏置电路配置", "MIC电路BIAS配置，省电容，省电阻配置", MIC_BIAS_METHOD, BIT, 2, 1, 3, ("None", 0), ("MIC省电阻电容", 1), ("MIC只省电阻", 2), BT_SCO_EN);
config(BIT, "MIC内部偏置电阻大小", "MIC内部偏置电阻大小配置", MIC_BIAS_RESISTOR, 3, 0, 7, 3, BT_SCO_EN);
config(LEVEL, 0x00);
config(CHECK, "打开MIC EQ", "打开MIC EQ", MIC_EQ_EN, 0, BT_SCO_EN);
config(LISTVAL, "MIC EQ衰减", "MIC EQ衰减(0~-15DB)", MIC_EQ_GAIN, BIT, 4, 0, 16, ("0DB", 0), ("-1DB", 1), ("-2DB", 2), ("-3DB", 3), ("-4DB", 4), ("-5DB", 5), ("-6DB", 6), ("-7DB", 7), ("-8DB", 8), ("-9DB", 9), ("-10DB", 10), ("-11DB", 11), ("-12DB", 12), ("-13DB", 13), ("-14DB", 14), ("-15DB", 15), MIC_EQ_EN);
config(LISTVAL, "MIC EQ增益(200Hz)", "选择BANK 1（200Hz）增益", MIC_EQ_GAIN_1,  BIT, 4, 0, 16, ("0DB", 0), ("1DB", 1), ("2DB", 2), ("3DB", 3), ("4DB", 4), ("5DB", 5), ("6DB", 6), ("7DB", 7), ("-1DB", 8), ("-2DB", 9), ("-3DB", 10), ("-4DB", 11), ("-5DB", 12), ("-6DB", 13), ("-7DB", 14), ("-8DB", 15), MIC_EQ_EN);
config(LISTVAL, "MIC EQ增益(600Hz)", "选择BANK 2（600Hz）增益", MIC_EQ_GAIN_2,  BIT, 4, 0, 16, ("0DB", 0), ("1DB", 1), ("2DB", 2), ("3DB", 3), ("4DB", 4), ("5DB", 5), ("6DB", 6), ("7DB", 7), ("-1DB", 8), ("-2DB", 9), ("-3DB", 10), ("-4DB", 11), ("-5DB", 12), ("-6DB", 13), ("-7DB", 14), ("-8DB", 15), MIC_EQ_EN);
config(LISTVAL, "MIC EQ增益(1000Hz)", "选择BANK 3（1000Hz）增益", MIC_EQ_GAIN_3, BIT, 4, 0, 16, ("0DB", 0), ("1DB", 1), ("2DB", 2), ("3DB", 3), ("4DB", 4), ("5DB", 5), ("6DB", 6), ("7DB", 7), ("-1DB", 8), ("-2DB", 9), ("-3DB", 10), ("-4DB", 11), ("-5DB", 12), ("-6DB", 13), ("-7DB", 14), ("-8DB", 15), MIC_EQ_EN);
config(LISTVAL, "MIC EQ增益(1600Hz)", "选择BANK 4（1600Hz）增益", MIC_EQ_GAIN_4, BIT, 4, 0, 16, ("0DB", 0), ("1DB", 1), ("2DB", 2), ("3DB", 3), ("4DB", 4), ("5DB", 5), ("6DB", 6), ("7DB", 7), ("-1DB", 8), ("-2DB", 9), ("-3DB", 10), ("-4DB", 11), ("-5DB", 12), ("-6DB", 13), ("-7DB", 14), ("-8DB", 15), MIC_EQ_EN);
config(LISTVAL, "MIC EQ增益(2500Hz)", "选择BANK 5（2500Hz）增益", MIC_EQ_GAIN_5, BIT, 4, 0, 16, ("0DB", 0), ("1DB", 1), ("2DB", 2), ("3DB", 3), ("4DB", 4), ("5DB", 5), ("6DB", 6), ("7DB", 7), ("-1DB", 8), ("-2DB", 9), ("-3DB", 10), ("-4DB", 11), ("-5DB", 12), ("-6DB", 13), ("-7DB", 14), ("-8DB", 15), MIC_EQ_EN);
config(LISTVAL, "MIC EQ增益(5000Hz)", "选择BANK 6（5000Hz）增益", MIC_EQ_GAIN_6, BIT, 4, 0, 16, ("0DB", 0), ("1DB", 1), ("2DB", 2), ("3DB", 3), ("4DB", 4), ("5DB", 5), ("6DB", 6), ("7DB", 7), ("-1DB", 8), ("-2DB", 9), ("-3DB", 10), ("-4DB", 11), ("-5DB", 12), ("-6DB", 13), ("-7DB", 14), ("-8DB", 15), MIC_EQ_EN);
config(LISTVAL, "MIC EQ 低通", "选择低通频率", MIC_EQ_LOWP, BIT, 2, 0, 4 ("关闭低通", 0), ("3000(3800)Hz", 1), ("3400(4500)Hz", 2), ("3800(7500)Hz", 3), MIC_EQ_EN);
config(LISTVAL, "MIC EQ 高通", "选择高通频率", MIC_EQ_HIGHP, BIT, 2, 0, 4 ("关闭高通", 0), ("100Hz", 1), ("150Hz", 2), ("250Hz", 3), MIC_EQ_EN);
config(LEVEL, 0x03);
config(LISTVAL, "MIC模拟增益", "MIC模拟增益档位选择", BT_ANL_GAIN, BIT, 4, 2, 14, ("2 (3DB)", 2), ("3 (6DB)", 3), ("4 (9DB)", 4), ("5 (12DB)", 5), ("6 (15DB)", 6), ("7 (18DB)", 7), ("8 (21DB)", 8), ("9 (24DB)", 9), ("10 (27DB)", 10), ("11 (30DB)", 11), ("12 (33DB)", 12), ("13 (36DB)", 13), ("14 (39DB)", 14), ("15 (42DB)", 15), BT_SCO_EN);

config(SUB, "通话参数", "蓝牙的通话参数");
config(BIT, "通话MIC数字增益", "MIC SDADC数字增益, Step 0.5DB, 总共(0~32DB)", BT_DIG_GAIN, 6, 0, 63, 16, BT_SCO_EN);
config(BIT, "通话MIC后置数字增益", "调节算法后置MIC数字增益", MIC_POST_GAIN, 3, 0, 7, 1, BT_SCO_EN);
config(CHECK, "DNN近端降噪", "是否使能DNN近端降噪功能,非稳态降噪效果稍好,人声稍偏闷", BT_SCO_NR_EN, 1, BT_SCO_EN);
config(CHECK, "AINS3近端降噪", "是否使能AINS3近端降噪功能,非稳态降噪效果稍差,人声音质稍好", BT_SCO_AINS3_EN, 0, BT_SCO_EN);
config(BIT, "近端降噪级别", "近端降噪深度, 值越大降噪越猛。", BT_SCO_NR_LEVEL, 5, 0, 31, 1, BT_SCO_EN);
config(CHECK, "近端降噪去喇叭声", "近端降噪是否加强对车喇叭声的消除, 对音质有些影响。", BT_SCO_NR_TRUMPET_EN, 1, BT_SCO_EN);
config(LEVEL, 0x00);
config(BIT, "AINS3非平稳噪声抑制能力", "AINS3非平稳噪声抑制能力, 值越大, 对非平稳噪声能力越强，人声也会越。", BT_AINS3_PS_RATE, 4, 0, 15, 1, BT_SCO_AINS3_EN);
config(LISTVAL, "AINS3低频的噪声谱", "AINS3替换噪声谱的低频范围", BT_AINS3_LOW_FRE_RANGE, BIT, 2, 0, 4, ("7", 0), ("1", 1), ("3", 2), ("10", 3), BT_SCO_AINS3_EN);
config(LEVEL, 0x03);
config(LISTVAL, "DNN噪声谱选择", "近端降噪的噪声谱选择", BT_SCO_NR_MIN_RANGE_SEL, BIT, 2, 1, 4, ("噪声谱0", 0), ("噪声谱1", 1), ("噪声谱2", 2), ("噪声谱3", 3), BT_SCO_NR_EN);
config(CHECK, "DNN降噪去风声", "近端降噪是否加强对风噪的消除", BT_SCO_NR_WIND_EN, 1, BT_SCO_NR_EN);
config(BIT, "风噪检测阈值", "MIC风噪检测阈值选择", BT_SCO_NR_WIND_DET_THR, 2, 0, 3, 1, BT_SCO_NR_WIND_EN);
config(LISTVAL, "风噪降噪强度", "MIC风噪降噪强度选择", BT_SCO_NR_WIND_LEVEL, BIT, 2, 1, 4, ("3000", 0), ("4800", 1), ("6500", 2), ("8000", 3), BT_SCO_NR_WIND_EN);
config(CHECK, "远端降噪功能", "是否使能远端降噪功能(手机端传下来的数据降噪)", BT_SCO_FAR_NR_EN, 0, BT_SCO_EN);
config(BIT, "远端降噪级别", "远端降噪深度, 值越大降噪越猛。", BT_SCO_FAR_NR_LEVEL, 4, 0, 15, 1, BT_SCO_FAR_NR_EN);
config(CHECK, "ALC功能", "是否支持ALC功能，AEC/ALC只能二选一", BT_ALC_EN, 0, BT_SCO_EN);
config(CHECK, "AEC功能", "是否支持AEC功能，AEC/ALC只能二选一", BT_AEC_EN, 1, BT_SCO_EN);
config(LISTVAL, "AEC的NLP模式选择", "AEC的NLP模式选择, 值越小回声抑制越多, 双讲越差。", BT_AEC_NLP_SEL, BIT, 2, 0, 4, ("nlp模式1 (推荐)", 0), ("nlp模式0 (最强)", 1), ("nlp模式2 (最弱)", 2), ("nlp模式1 (重写项)", 3), BT_AEC_EN);
config(BIT, "AEC回声消除级别", "回声消除级别(级别越高，回声衰减越明显，但通话效果越差)", BT_ECHO_LEVEL, 3, 0, 7, 2, BT_AEC_EN);
config(BIT, "AEC远端补偿值", "远端补偿值(0~255)", BT_FAR_OFFSET, 8, 0, 255, 178, BT_AEC_EN);
config(LISTVAL, "通话DUMP数据功能", "通过HUART DUMP通话数据, 需要先打开HUART在线调EQ功能。", BT_SCO_DUMP_CFG, BIT, 2, 0, 4, ("关闭", 0), ("近端降噪输入及输出", 1), ("AEC输入及输出", 2), ("远端降噪输入及输出", 3), BT_SCO_EN);

config(LEVEL, 0x00);
config(SUB, "EQ配置", "EQ的相关配置", EQ_EN);
config(LISTVAL, "EQ衰减", "EQ衰减(0~-15DB)", EQ_GAIN, BIT, 4, 0, 16 ("0DB", 0), ("-1DB", 1), ("-2DB", 2), ("-3DB", 3), ("-4DB", 4), ("-5DB", 5), ("-6DB", 6), ("-7DB", 7), ("-8DB", 8), ("-9DB", 9), ("-10DB", 10), ("-11DB", 11), ("-12DB", 12), ("-13DB", 13), ("-14DB", 14), ("-15DB", 15), EQ_EN);
config(LISTVAL, "EQ增益1（31Hz）", "选择BANK 1（31Hz）增益", EQ_GAIN_1, BIT, 4, 0, 16 ("0DB", 0), ("1DB", 1), ("2DB", 2), ("3DB", 3), ("4DB", 4), ("5DB", 5), ("6DB", 6), ("7DB", 7), ("-1DB", 8), ("-2DB", 9), ("-3DB", 10), ("-4DB", 11), ("-5DB", 12), ("-6DB", 13), ("-7DB", 14), ("-8DB", 15), EQ_EN);
config(LISTVAL, "EQ增益2（62Hz）", "选择BANK 2（62Hz）增益", EQ_GAIN_2, BIT, 4, 0, 16 ("0DB", 0), ("1DB", 1), ("2DB", 2), ("3DB", 3), ("4DB", 4), ("5DB", 5), ("6DB", 6), ("7DB", 7), ("-1DB", 8), ("-2DB", 9), ("-3DB", 10), ("-4DB", 11), ("-5DB", 12), ("-6DB", 13), ("-7DB", 14), ("-8DB", 15), EQ_EN);
config(LISTVAL, "EQ增益3（125Hz）", "选择BANK 3（125Hz）增益", EQ_GAIN_3, BIT, 4, 0, 16 ("0DB", 0), ("1DB", 1), ("2DB", 2), ("3DB", 3), ("4DB", 4), ("5DB", 5), ("6DB", 6), ("7DB", 7), ("-1DB", 8), ("-2DB", 9), ("-3DB", 10), ("-4DB", 11), ("-5DB", 12), ("-6DB", 13), ("-7DB", 14), ("-8DB", 15), EQ_EN);
config(LISTVAL, "EQ增益4（250Hz）", "选择BANK 4（250Hz）增益", EQ_GAIN_4, BIT, 4, 0, 16 ("0DB", 0), ("1DB", 1), ("2DB", 2), ("3DB", 3), ("4DB", 4), ("5DB", 5), ("6DB", 6), ("7DB", 7), ("-1DB", 8), ("-2DB", 9), ("-3DB", 10), ("-4DB", 11), ("-5DB", 12), ("-6DB", 13), ("-7DB", 14), ("-8DB", 15), EQ_EN);
config(LISTVAL, "EQ增益5（500Hz）", "选择BANK 5（500Hz）增益", EQ_GAIN_5, BIT, 4, 0, 16 ("0DB", 0), ("1DB", 1), ("2DB", 2), ("3DB", 3), ("4DB", 4), ("5DB", 5), ("6DB", 6), ("7DB", 7), ("-1DB", 8), ("-2DB", 9), ("-3DB", 10), ("-4DB", 11), ("-5DB", 12), ("-6DB", 13), ("-7DB", 14), ("-8DB", 15), EQ_EN);
config(LISTVAL, "EQ增益6（1000Hz）", "选择BANK 6（1000Hz）增益", EQ_GAIN_6, BIT, 4, 0, 16 ("0DB", 0), ("1DB", 1), ("2DB", 2), ("3DB", 3), ("4DB", 4), ("5DB", 5), ("6DB", 6), ("7DB", 7), ("-1DB", 8), ("-2DB", 9), ("-3DB", 10), ("-4DB", 11), ("-5DB", 12), ("-6DB", 13), ("-7DB", 14), ("-8DB", 15), EQ_EN);
config(LISTVAL, "EQ增益7（2000Hz）", "选择BANK 7（2000Hz）增益", EQ_GAIN_7, BIT, 4, 0, 16 ("0DB", 0), ("1DB", 1), ("2DB", 2), ("3DB", 3), ("4DB", 4), ("5DB", 5), ("6DB", 6), ("7DB", 7), ("-1DB", 8), ("-2DB", 9), ("-3DB", 10), ("-4DB", 11), ("-5DB", 12), ("-6DB", 13), ("-7DB", 14), ("-8DB", 15), EQ_EN);
config(LISTVAL, "EQ增益8（4000Hz）", "选择BANK 8（4000Hz）增益", EQ_GAIN_8, BIT, 4, 0, 16 ("0DB", 0), ("1DB", 1), ("2DB", 2), ("3DB", 3), ("4DB", 4), ("5DB", 5), ("6DB", 6), ("7DB", 7), ("-1DB", 8), ("-2DB", 9), ("-3DB", 10), ("-4DB", 11), ("-5DB", 12), ("-6DB", 13), ("-7DB", 14), ("-8DB", 15), EQ_EN);
config(LISTVAL, "EQ增益9（8000Hz）", "选择BANK 9（8000Hz）增益", EQ_GAIN_9, BIT, 4, 0, 16 ("0DB", 0), ("1DB", 1), ("2DB", 2), ("3DB", 3), ("4DB", 4), ("5DB", 5), ("6DB", 6), ("7DB", 7), ("-1DB", 8), ("-2DB", 9), ("-3DB", 10), ("-4DB", 11), ("-5DB", 12), ("-6DB", 13), ("-7DB", 14), ("-8DB", 15), EQ_EN);
config(LISTVAL, "EQ增益10（16000Hz）", "选择BANK 10（16000Hz）增益", EQ_GAIN_10, BIT, 4, 0, 16 ("0DB", 0), ("1DB", 1), ("2DB", 2), ("3DB", 3), ("4DB", 4), ("5DB", 5), ("6DB", 6), ("7DB", 7), ("-1DB", 8), ("-2DB", 9), ("-3DB", 10), ("-4DB", 11), ("-5DB", 12), ("-6DB", 13), ("-7DB", 14), ("-8DB", 15), EQ_EN);
config(LEVEL, 0x03);

config(SUB, "提示音配置", "选择各状态提示音类型或无提示音", TONE_CONFIG_EN);
config(LISTVAL, "开机/关机提示音", 		"选择开机/关机的提示音", 		V_POWER_SEL, 		BIT, 2, 2, 	4, ("无提示音", 0), ("TONE音", 1), ("语音", 2), ("和弦音", 3), TONE_CONFIG_EN);
config(LISTVAL, "蓝牙连接/断开提示音", 	"选择蓝牙连接/断开连接提示音", 	V_CONNECT_SEL, 		BIT, 2, 2, 	4, ("无提示音", 0), ("TONE音", 1), ("语音", 2), ("和弦音", 3), TONE_CONFIG_EN);
config(LISTVAL, "进入配对提示音", 		"选择进入配对提示音", 			V_PAIRING_SEL, 		BIT, 2, 2, 	3, ("无提示音", 0), ("TONE音", 1), ("语音", 2), TONE_CONFIG_EN);
config(LISTVAL, "左/右声道提示音",   	"选择右声道提示音", 			V_CHANNEL_SEL, 		BIT, 2, 2, 	3, ("无提示音", 0), ("TONE音", 1), ("语音", 2), TONE_CONFIG_EN);
config(LISTVAL, "语言切换提示音", 		"选择语言切换提示音", 			V_LANG_SWITCH_SEL, 	BIT, 2, 2, 	3, ("无提示音", 0), ("TONE音", 1), ("语音", 2), TONE_CONFIG_EN);
config(LISTVAL, "电池低电提示音", 		"选择电池低电提示音", 			V_LOWBATTERY_SEL, 	BIT, 2, 1, 	3, ("无提示音", 0), ("TONE音", 1), ("和弦音", 3), TONE_CONFIG_EN);
config(LISTVAL, "游戏/音乐模式提示音",  "选择游戏/音乐模式提示音", 		V_GAME_MODE_SEL, 	BIT, 1, 1, 	2, ("TONE音", 0),   ("语音", 1), TONE_CONFIG_EN);
config(LISTVAL, "回拔/拒接/挂断提示音", "选择回拔/拒接/挂断电话提示音", V_REDIALING_SEL, 	BIT, 1, 1, 	2, ("无提示音", 0), ("TONE音", 1), TONE_CONFIG_EN);
config(LISTVAL, "最大音量提示音", 		"选择最大音量提示音", 			V_MAXVOL_SEL, 		BIT, 1, 1, 	2, ("无提示音", 0), ("TONE音", 1), TONE_CONFIG_EN);
config(LISTVAL, "最小音量提示音", 		"选择最小音量提示音", 			V_MINVOL_SEL, 		BIT, 1, 0, 	2, ("无提示音", 0), ("TONE音", 1), TONE_CONFIG_EN);
config(LISTVAL, "来电响铃提示音", 		"选择来电响铃提示音", 			V_RING_SEL, 		BIT, 1, 1, 	2, ("无提示音", 0), ("TONE音", 1), TONE_CONFIG_EN);
config(LISTVAL, "开启/关闭拍照提示音", 	"选择开启/关闭拍照提示音", 		V_CAMERAON_SEL, 	BIT, 1, 1, 	2, ("无提示音", 0), ("TONE音", 1), TONE_CONFIG_EN);
config(LISTVAL, "拍照提示音", 			"选择拍照提示音", 				V_TAKE_PHOTO_SEL, 	BIT, 1, 0, 	2, ("无提示音", 0), ("TONE音", 1), TONE_CONFIG_EN);
config(LISTVAL, "蓝牙模式提示音", 		"选择蓝牙模式提示音", 			V_BTMODE_SEL, 		BIT, 1, 0,  2, ("无提示音", 0), ("TONE音", 1), TONE_CONFIG_EN);
config(LISTVAL, "AUX模式提示音",  		"选择AUX模式提示音",  			V_AUXMODE_SEL, 		BIT, 1, 1,  2, ("无提示音", 0), ("TONE音", 1), TONE_CONFIG_EN);
config(CHECK, "各状态Tone音相同", "是否使用相同的tone音", TONE_LIGHTNING_EN, 0, TONE_CONFIG_EN);
config(LISTVAL, "最大音量Tone音选择", 	"选择最大音量Tone音", 			TONE_MAXVOL_SEL, 	BIT, 2, 0, 	4, ("Tone音0", 0), ("Tone音1", 1), ("Tone音2", 2), ("Tone音3", 3), TONE_CONFIG_EN);
config(LISTVAL, "最小音量Tone音选择", 	"选择最小音量Tone音", 			TONE_MINVOL_SEL, 	BIT, 2, 0, 	4, ("Tone音0", 0), ("Tone音1", 1), ("Tone音2", 2), ("Tone音3", 3), TONE_CONFIG_EN);

config(SUB, "触摸及入耳配置", "选择触摸按键及入耳检测功能配置");
config(CHECK, "内置触摸SPP调试", "是否使能蓝牙SPP输出触摸的TKCNT信息, 需要先使能蓝牙的SPP功能", USER_TKEY_DEBUG_EN, 0);
config(CHECK, "内置触摸按键功能", "是否打开内置触摸按键功能，touch key固定使用wko引脚", USER_TKEY, 0);
config(CHECK, "内置触摸软开关机", "是否使能touchkey(wko)的软开关机功能", USER_TKEY_SOFT_PWR_EN, 0, USER_TKEY);
config(CHECK, "触摸按键仅需按键关机", "是否关闭touchkey(wko)唤醒软关机, 只能按键关机。", USER_TKEY_WAKEUP_DIS, 0, USER_TKEY_SOFT_PWR_EN);
config(LEVEL, 0x00);
config(CHECK, "内置触摸定时唤醒关闭", "是否关闭触摸定时唤醒监测电池电压功能", USER_TKEY_ALARM_DIS, 0, USER_TKEY);
config(CHECK, "触摸平均值差值算法",   "触摸平均值与当前值差值判断算法, 对防汗有作用。", TK_AVG_EXP_EN, 0, USER_TKEY);
config(LEVEL, 0x03);
config(LISTVAL, "内置触摸滑动功能GPIO", "选择内置触摸滑动功能GPIO, 2点滑动触摸", TKEY_SLIDE_GPIO_SEL, BIT, 2, 0, 4, ("None", 0), ("PA7", 1), ("PB3", 2), ("PB4", 3), USER_TKEY);
config(LISTVAL, "内置触摸滑动功能按下最小间隔选择", "选择内置触摸滑动功能按下最小间隔", TKEY_SLIDE_INTERVAL_MIN_SEL, BIT, 2, 0, 4, ("15ms", 0), ("20ms", 1), ("25ms", 2), ("30ms", 3), USER_TKEY);
config(LISTVAL, "内置触摸滑动功能定义", "内置触摸滑动功能定义", TKEY_SLIDE_MSG_SEL, BIT, 1, 0, 2, ("上滑音量加", 0), ("上滑音量减", 1), USER_TKEY);
config(BIT, "触摸按键CDPR参数", "触摸按键通路的CDPR参数配置, TKEY_CDPR=配置值*10", TKEY_CDPR,  4, 0, 15, 8, USER_TKEY);
config(BIT, "触摸按键FILTER参数", "触摸按键通路的filter参数配置, 值越大触摸越不灵敏", TKEY_FIL_HIGH, 3, 0, 7, 0, USER_TKEY);
config(BIT, "触摸充电电流", "内置触摸充电电流", TK_CHARGE_CURRENT,  5, 0, 31, 20, USER_TKEY);
config(BIT, "TKPTHRESH参数", "触摸按键press阈值, TKPTHRESH=配置值*2", TKPTHRESH, 4, 0, 15, 14, USER_TKEY);
config(BIT, "TKRTHRESH参数", "触摸按键release阈值, TKRTHRESH=配置值*2", TKRTHRESH, 4, 0, 15, 8, USER_TKEY);
config(CHECK, "内置触摸入耳检测", "是否使能内置触摸入耳检测功能, 入耳检测触摸GPIO可选(PB3, PB4, PA7)", USER_TKEY_INEAR, 0);
config(BIT, "入耳充电电流", "内置触摸入耳充电电流", TE_CHARGE_CURRENT,  5, 0, 31, 20, USER_TKEY_INEAR);
config(BIT, "入耳CDPR参数", "触摸入耳检测通路的CDPR参数配置, TE_CDPR=配置值*20", TE_CDPR,  4, 0, 15, 9, USER_TKEY_INEAR);
config(BIT, "TEPTHRESH参数", "触摸按键press阈值, TEPTHRESH=配置值*2", TEPTHRESH, 4, 0, 15, 12, USER_TKEY_INEAR);
config(BIT, "TERTHRESH参数", "触摸按键release阈值, TERTHRESH=配置值*2", TERTHRESH, 4, 0, 15, 6, USER_TKEY_INEAR);
config(LISTVAL, "入耳检测", "选择入耳检测GPIO, 选择None将关闭入耳检测功能。没开内置触摸入耳检测，则用外置光感器件", EARIN_GPIO_SEL, BIT, 3, 0, 8, ("None", 0), ("PA6", 1), ("PA7(支持内置触摸)", 2), ("PB3(支持内置触摸)", 3), ("PB4(支持内置触摸)", 4), ("PE0", 5), ("PE7", 6), ("PF2", 7), BT_TWS_EN);
config(CHECK, "PP控制的通用入耳功能", "是否发送PLAY/PAUSE方式，可以兼容android。关掉后为3D的真入耳功能", BT_EARIN_USAGE_PP_EN, 0);

config(SUB, "按键配置", "选择按键及按键功能配置");
config(CHECK, "PWRKEY功能", "是否使用PWRKEY，使用软开关机时必须使能", USER_PWRKEY_EN, 1);
config(CHECK, "IOKEY功能", "是否使用IOKEY", USER_IOKEY_EN, 0);
config(CHECK, "ADKEY功能", "是否使用ADKEY", USER_ADKEY_EN, 0);
config(CHECK, "ADKEY使用内部10K上拉", "是否ADKEY使用内部10K上拉, 否则需要外接10K上拉电阻", USER_ADKEY_PU10K_EN, 0, USER_ADKEY_EN);
config(LISTVAL, "选择ADKEY的Channel", "选择ADKEY的Channel", ADKEY_CH, BIT, 3, 5, 6, ("ADCCH_PA6", 1), ("ADCCH_PA7", 2), ("ADCCH_PB3", 3), ("ADCCH_PB4", 4), ("ADCCH_PE7", 5), ("ADCCH_PF2", 6), USER_ADKEY_EN);
config(LISTVAL, "按键长按时间选择", "选择按键长按时间", KL_TIME_SEL, BIT, 2, 0, 4, ("0.8秒", 0), ("1.4秒", 1), ("2秒", 2), ("2.6秒", 3));
config(LISTVAL, "多击响应时间选择", "选择多击按键响应间隔时间", DOUBLE_KEY_TIME, BIT, 3, 2, 8, ("200ms", 0), ("300ms", 1), ("400ms", 2), ("500ms", 3), ("600ms", 4), ("700ms", 5), ("800ms", 6), ("900ms", 7));
config(LISTVAL, "USER_DEF键单按", "选择USER_DEF键单按的功能", USER_DEF_KS_SEL,    BIT, 5, 12, 17, ("无", 0), ("回拨", 1), ("SIRI", 2), ("PREV", 3), ("NEXT", 4), ("VOL+", 5), ("VOL-", 6), ("SIRI/回拨", 7), ("HID拍照", 8), ("IOS HOME", 9), ("中英文切换", 10), ("氛围灯开/关", 11), ("PLAY/PAUSE", 12), ("NR切换", 13), ("POPUP开/关", 14), ("Game切换", 15), ("MODE", 16));
config(LISTVAL, "USER_DEF键长按", "选择USER_DEF键长按的功能", USER_DEF_KL_SEL,    BIT, 5, 2, 17, ("无", 0), ("回拨", 1), ("SIRI", 2), ("PREV", 3), ("NEXT", 4), ("VOL+", 5), ("VOL-", 6), ("SIRI/回拨", 7), ("HID拍照", 8), ("IOS HOME", 9), ("中英文切换", 10), ("氛围灯开/关", 11), ("PLAY/PAUSE", 12), ("NR切换", 13), ("POPUP开/关", 14), ("Game切换", 15), ("MODE", 16));
config(LISTVAL, "USER_DEF键双击", "选择USER_DEF键双击的功能", USER_DEF_KD_SEL,    BIT, 5, 1, 17, ("无", 0), ("回拨", 1), ("SIRI", 2), ("PREV", 3), ("NEXT", 4), ("VOL+", 5), ("VOL-", 6), ("SIRI/回拨", 7), ("HID拍照", 8), ("IOS HOME", 9), ("中英文切换", 10), ("氛围灯开/关", 11), ("PLAY/PAUSE", 12), ("NR切换", 13), ("POPUP开/关", 14), ("Game切换", 15), ("MODE", 16));
config(LISTVAL, "USER_DEF键三击", "选择USER_DEF键三击的功能", USER_DEF_KT_SEL, 	 BIT, 5, 0, 17, ("无", 0), ("回拨", 1), ("SIRI", 2), ("PREV", 3), ("NEXT", 4), ("VOL+", 5), ("VOL-", 6), ("SIRI/回拨", 7), ("HID拍照", 8), ("IOS HOME", 9), ("中英文切换", 10), ("氛围灯开/关", 11), ("PLAY/PAUSE", 12), ("NR切换", 13), ("POPUP开/关", 14), ("Game切换", 15), ("MODE", 16));
config(LISTVAL, "USER_DEF键四击", "选择USER_DEF键四击的功能", USER_DEF_KFOUR_SEL, BIT, 5, 0, 17, ("无", 0), ("回拨", 1), ("SIRI", 2), ("PREV", 3), ("NEXT", 4), ("VOL+", 5), ("VOL-", 6), ("SIRI/回拨", 7), ("HID拍照", 8), ("IOS HOME", 9), ("中英文切换", 10), ("氛围灯开/关", 11), ("PLAY/PAUSE", 12), ("NR切换", 13), ("POPUP开/关", 14), ("Game切换", 15), ("MODE", 16));
config(LISTVAL, "USER_DEF键五击", "选择USER_DEF键五击的功能", USER_DEF_KFIVE_SEL, BIT, 5, 0, 17, ("无", 0), ("回拨", 1), ("SIRI", 2), ("PREV", 3), ("NEXT", 4), ("VOL+", 5), ("VOL-", 6), ("SIRI/回拨", 7), ("HID拍照", 8), ("IOS HOME", 9), ("中英文切换", 10), ("氛围灯开/关", 11), ("PLAY/PAUSE", 12), ("NR切换", 13), ("POPUP开/关", 14), ("Game切换", 15), ("MODE", 16));
config(CHECK, "USER_DEF键长按按键音", "选择USER_DEF键长按功能时，是否滴一下提示", USER_DEF_KL_TONE_EN, 1);
config(CHECK, "USER_DEF键双击按键音", "选择USER_DEF键双击时，是否滴一下提示", USER_DEF_KD_TONE_EN, 0);
config(CHECK, "USER_DEF键三击按键音", "选择USER_DEF键三击时，是否滴一下提示", USER_DEF_KT_TONE_EN, 0);
config(CHECK, "USER_DEF键四击按键音", "选择USER_DEF键四击时，是否滴一下提示", USER_DEF_KFOUR_TONE_EN, 0);
config(CHECK, "USER_DEF键双击切语言", "蓝牙未连接手机时，双击切换中英文语音", USER_DEF_KD_LANG_EN, 1);
config(CHECK, "USER_DEF键四击清配对", "蓝牙未连接, TWS未配对时，按键4击清蓝牙配对信息", USER_DEF_KFOUR_CLR_PAIR_EN, 0);
config(CHECK, "USER_DEF键区分左右耳", "USER_DEF键区分左右耳的功能，配置值为左耳功能（例如左耳上一曲，则右耳为下一曲，音量加减同理）", USER_DEF_LR_EN, 0);
config(CHECK, "单耳默认为右耳功能", "使能USER_DEF键区分左右耳的功能后，TWS未连接单耳是否默认为右耳功能。", USER_DEF_LR_DEFAULT_R, 0, USER_DEF_LR_EN);
config(CHECK, "USER_DEF键长按来电拒接", "是否来电响铃时长按拒接", USER_DEF_KL_REJECT_EN, 1);
config(CHECK, "USER_DEF键双击来电拒接", "是否来电响铃时双击拒接", USER_DEF_KD_REJECT_EN, 0);
config(CHECK, "USER_DEF键允许通话关机", "是否允许来电响铃/通话过程中长按关机功能", USER_DEF_KL_CALL_PWRDWN_EN, 0);
config(CHECK, "关闭按键长按关机功能", "关PWRKEY/触摸长按关机功能, 只能按键开机。用于实现一直长按进行音量调节", KL_PWRDWN_DIS, 0);

config(CHECK, "PWRKEY按键定制", "是否配置PWRKEY按键功能，不勾选使用SDK默认按键配置", PWRKEY_CONFIG_EN, 1, USER_PWRKEY_EN);
config(LISTVAL, "PWRKEY按键1功能", "PWRKEY第1个按键功能定制", PWRKEY_NUM0, BIT, 5, 20, 23, ("None", 0), ("P/P", 1), ("PWR", 2), ("NEXT/VOL+", 3), ("PREV/VOL-", 4), ("NEXT/VOL-", 5), ("PREV/VOL+", 6), ("VOL+/NEXT", 7), ("VOL-/PREV", 8), ("VOL-/NEXT", 9), ("VOL+/PREV", 10), ("VOL+", 11), ("VOL-", 12), ("NEXT", 13), ("PREV", 14), ("MODE", 15), ("HSF", 16), ("MODE/PWR", 17), ("SIRI", 18), ("HOME", 19), ("PP/PWR/USER_DEF", 20), ("PP/USER_DEF", 21), ("VOL+/VOL-", 22), PWRKEY_CONFIG_EN);
config(LISTVAL, "PWRKEY按键2功能", "PWRKEY第2个按键功能定制", PWRKEY_NUM1, BIT, 5, 0, 23, ("None", 0), ("P/P", 1), ("PWR", 2), ("NEXT/VOL+", 3), ("PREV/VOL-", 4), ("NEXT/VOL-", 5), ("PREV/VOL+", 6), ("VOL+/NEXT", 7), ("VOL-/PREV", 8), ("VOL-/NEXT", 9), ("VOL+/PREV", 10), ("VOL+", 11), ("VOL-", 12), ("NEXT", 13), ("PREV", 14), ("MODE", 15), ("HSF", 16), ("MODE/PWR", 17), ("SIRI", 18), ("HOME", 19), ("PP/PWR/USER_DEF", 20), ("PP/USER_DEF", 21), ("VOL+/VOL-", 22), PWRKEY_CONFIG_EN);
config(LISTVAL, "PWRKEY按键3功能", "PWRKEY第3个按键功能定制", PWRKEY_NUM2, BIT, 5, 0, 23, ("None", 0), ("P/P", 1), ("PWR", 2), ("NEXT/VOL+", 3), ("PREV/VOL-", 4), ("NEXT/VOL-", 5), ("PREV/VOL+", 6), ("VOL+/NEXT", 7), ("VOL-/PREV", 8), ("VOL-/NEXT", 9), ("VOL+/PREV", 10), ("VOL+", 11), ("VOL-", 12), ("NEXT", 13), ("PREV", 14), ("MODE", 15), ("HSF", 16), ("MODE/PWR", 17), ("SIRI", 18), ("HOME", 19), ("PP/PWR/USER_DEF", 20), ("PP/USER_DEF", 21), ("VOL+/VOL-", 22), PWRKEY_CONFIG_EN);
config(LISTVAL, "PWRKEY按键4功能", "PWRKEY第4个按键功能定制", PWRKEY_NUM3, BIT, 5, 0, 23, ("None", 0), ("P/P", 1), ("PWR", 2), ("NEXT/VOL+", 3), ("PREV/VOL-", 4), ("NEXT/VOL-", 5), ("PREV/VOL+", 6), ("VOL+/NEXT", 7), ("VOL-/PREV", 8), ("VOL-/NEXT", 9), ("VOL+/PREV", 10), ("VOL+", 11), ("VOL-", 12), ("NEXT", 13), ("PREV", 14), ("MODE", 15), ("HSF", 16), ("MODE/PWR", 17), ("SIRI", 18), ("HOME", 19), ("PP/PWR/USER_DEF", 20), ("PP/USER_DEF", 21), ("VOL+/VOL-", 22), PWRKEY_CONFIG_EN);
config(LISTVAL, "PWRKEY按键5功能", "PWRKEY第5个按键功能定制", PWRKEY_NUM4, BIT, 5, 0, 23, ("None", 0), ("P/P", 1), ("PWR", 2), ("NEXT/VOL+", 3), ("PREV/VOL-", 4), ("NEXT/VOL-", 5), ("PREV/VOL+", 6), ("VOL+/NEXT", 7), ("VOL-/PREV", 8), ("VOL-/NEXT", 9), ("VOL+/PREV", 10), ("VOL+", 11), ("VOL-", 12), ("NEXT", 13), ("PREV", 14), ("MODE", 15), ("HSF", 16), ("MODE/PWR", 17), ("SIRI", 18), ("HOME", 19), ("PP/PWR/USER_DEF", 20), ("PP/USER_DEF", 21), ("VOL+/VOL-", 22), PWRKEY_CONFIG_EN);

config(LISTVAL, "IOKEY按键1选择IO", "IOKEY第1个按键的GPIO口选择, 接GND", IOKEY_IO0, BIT, 3, 0,  8, ("None", 0), ("PA6", 1), ("PA7", 2), ("PB3", 3), ("PB4", 4), ("PE0", 5), ("PE7", 6), ("PF2", 7), USER_IOKEY_EN);
config(LISTVAL, "IOKEY按键2选择IO", "IOKEY第2个按键的GPIO口选择, 接GND", IOKEY_IO1, BIT, 3, 0,  8, ("None", 0), ("PA6", 1), ("PA7", 2), ("PB3", 3), ("PB4", 4), ("PE0", 5), ("PE7", 6), ("PF2", 7), USER_IOKEY_EN);
config(LISTVAL, "IOKEY按键1功能", "IOKEY第1个按键功能定制", IOKEY_NUM0, BIT, 5, 0, 23, ("None", 0), ("P/P", 1), ("PWR", 2), ("NEXT/VOL+", 3), ("PREV/VOL-", 4), ("NEXT/VOL-", 5), ("PREV/VOL+", 6), ("VOL+/NEXT", 7), ("VOL-/PREV", 8), ("VOL-/NEXT", 9), ("VOL+/PREV", 10), ("VOL+", 11), ("VOL-", 12), ("NEXT", 13), ("PREV", 14), ("MODE", 15), ("HSF", 16), ("MODE/PWR", 17), ("SIRI", 18), ("HOME", 19), ("PP/PWR/USER_DEF", 20), ("PP/USER_DEF", 21), ("VOL+/VOL-", 22), USER_IOKEY_EN);
config(LISTVAL, "IOKEY按键2功能", "IOKEY第2个按键功能定制", IOKEY_NUM1, BIT, 5, 0, 23, ("None", 0), ("P/P", 1), ("PWR", 2), ("NEXT/VOL+", 3), ("PREV/VOL-", 4), ("NEXT/VOL-", 5), ("PREV/VOL+", 6), ("VOL+/NEXT", 7), ("VOL-/PREV", 8), ("VOL-/NEXT", 9), ("VOL+/PREV", 10), ("VOL+", 11), ("VOL-", 12), ("NEXT", 13), ("PREV", 14), ("MODE", 15), ("HSF", 16), ("MODE/PWR", 17), ("SIRI", 18), ("HOME", 19), ("PP/PWR/USER_DEF", 20), ("PP/USER_DEF", 21), ("VOL+/VOL-", 22), USER_IOKEY_EN);
config(LISTVAL, "两IO中间的按键功能", "IOKEY1与IOKEY2两IO中间的按键", IOKEY_NUM2, BIT, 5, 0, 23, ("None", 0), ("P/P", 1), ("PWR", 2), ("NEXT/VOL+", 3), ("PREV/VOL-", 4), ("NEXT/VOL-", 5), ("PREV/VOL+", 6), ("VOL+/NEXT", 7), ("VOL-/PREV", 8), ("VOL-/NEXT", 9), ("VOL+/PREV", 10), ("VOL+", 11), ("VOL-", 12), ("NEXT", 13), ("PREV", 14), ("MODE", 15), ("HSF", 16), ("MODE/PWR", 17), ("SIRI", 18), ("HOME", 19), ("PP/PWR/USER_DEF", 20), ("PP/USER_DEF", 21), ("VOL+/VOL-", 22), USER_IOKEY_EN);

config(CHECK, "ADKEY按键定制", "是否配置ADKEY，不勾选使用SDK默认AKKEY按键功能", ADKEY_CONFIG_EN, 0, USER_ADKEY_EN);
config(CHECK, "ADKEY的ADC值自定义", "是否自定义ADKEY 3个按键的电压范围。打开后ADKEY只能做3个按键", ADKEY_ADCV_CONFIG_EN, 0, ADKEY_CONFIG_EN);
config(LISTVAL, "ADKEY按键1功能", "ADKEY第1个按键功能定制", ADKEY_NUM0, BIT, 5, 0,  23, ("None", 0), ("P/P", 1), ("PWR", 2), ("NEXT/VOL+", 3), ("PREV/VOL-", 4), ("NEXT/VOL-", 5), ("PREV/VOL+", 6), ("VOL+/NEXT", 7), ("VOL-/PREV", 8), ("VOL-/NEXT", 9), ("VOL+/PREV", 10), ("VOL+", 11), ("VOL-", 12), ("NEXT", 13), ("PREV", 14), ("MODE", 15), ("HSF", 16), ("MODE/PWR", 17), ("SIRI", 18), ("HOME", 19), ("PP/PWR/USER_DEF", 20), ("PP/USER_DEF", 21), ("VOL+/VOL-", 22), ADKEY_CONFIG_EN);
config(LISTVAL, "ADKEY按键2功能", "ADKEY第2个按键功能定制", ADKEY_NUM1, BIT, 5, 0,  23, ("None", 0), ("P/P", 1), ("PWR", 2), ("NEXT/VOL+", 3), ("PREV/VOL-", 4), ("NEXT/VOL-", 5), ("PREV/VOL+", 6), ("VOL+/NEXT", 7), ("VOL-/PREV", 8), ("VOL-/NEXT", 9), ("VOL+/PREV", 10), ("VOL+", 11), ("VOL-", 12), ("NEXT", 13), ("PREV", 14), ("MODE", 15), ("HSF", 16), ("MODE/PWR", 17), ("SIRI", 18), ("HOME", 19), ("PP/PWR/USER_DEF", 20), ("PP/USER_DEF", 21), ("VOL+/VOL-", 22), ADKEY_CONFIG_EN);
config(LISTVAL, "ADKEY按键3功能", "ADKEY第3个按键功能定制", ADKEY_NUM2, BIT, 5, 0, 23, ("None", 0), ("P/P", 1), ("PWR", 2), ("NEXT/VOL+", 3), ("PREV/VOL-", 4), ("NEXT/VOL-", 5), ("PREV/VOL+", 6), ("VOL+/NEXT", 7), ("VOL-/PREV", 8), ("VOL-/NEXT", 9), ("VOL+/PREV", 10), ("VOL+", 11), ("VOL-", 12), ("NEXT", 13), ("PREV", 14), ("MODE", 15), ("HSF", 16), ("MODE/PWR", 17), ("SIRI", 18), ("HOME", 19), ("PP/PWR/USER_DEF", 20), ("PP/USER_DEF", 21), ("VOL+/VOL-", 22), ADKEY_CONFIG_EN);
config(LISTVAL, "ADKEY按键4功能", "ADKEY第4个按键功能定制", ADKEY_NUM3, BIT, 5, 0, 23, ("None", 0), ("P/P", 1), ("PWR", 2), ("NEXT/VOL+", 3), ("PREV/VOL-", 4), ("NEXT/VOL-", 5), ("PREV/VOL+", 6), ("VOL+/NEXT", 7), ("VOL-/PREV", 8), ("VOL-/NEXT", 9), ("VOL+/PREV", 10), ("VOL+", 11), ("VOL-", 12), ("NEXT", 13), ("PREV", 14), ("MODE", 15), ("HSF", 16), ("MODE/PWR", 17), ("SIRI", 18), ("HOME", 19), ("PP/PWR/USER_DEF", 20), ("PP/USER_DEF", 21), ("VOL+/VOL-", 22), ADKEY_CONFIG_EN);
config(LISTVAL, "ADKEY按键5功能", "ADKEY第5个按键功能定制", ADKEY_NUM4, BIT, 5, 0, 23, ("None", 0), ("P/P", 1), ("PWR", 2), ("NEXT/VOL+", 3), ("PREV/VOL-", 4), ("NEXT/VOL-", 5), ("PREV/VOL+", 6), ("VOL+/NEXT", 7), ("VOL-/PREV", 8), ("VOL-/NEXT", 9), ("VOL+/PREV", 10), ("VOL+", 11), ("VOL-", 12), ("NEXT", 13), ("PREV", 14), ("MODE", 15), ("HSF", 16), ("MODE/PWR", 17), ("SIRI", 18), ("HOME", 19), ("PP/PWR/USER_DEF", 20), ("PP/USER_DEF", 21), ("VOL+/VOL-", 22), ADKEY_CONFIG_EN);
config(LISTVAL, "ADKEY按键6功能", "ADKEY第6个按键功能定制", ADKEY_NUM5, BIT, 5, 0, 23, ("None", 0), ("P/P", 1), ("PWR", 2), ("NEXT/VOL+", 3), ("PREV/VOL-", 4), ("NEXT/VOL-", 5), ("PREV/VOL+", 6), ("VOL+/NEXT", 7), ("VOL-/PREV", 8), ("VOL-/NEXT", 9), ("VOL+/PREV", 10), ("VOL+", 11), ("VOL-", 12), ("NEXT", 13), ("PREV", 14), ("MODE", 15), ("HSF", 16), ("MODE/PWR", 17), ("SIRI", 18), ("HOME", 19), ("PP/PWR/USER_DEF", 20), ("PP/USER_DEF", 21), ("VOL+/VOL-", 22), ADKEY_CONFIG_EN);
config(BIT, "ADKEY按键1的ADC值", "小于此ADC值为ADKEY第1个按键", ADCV_NUM0, 8, 0, 255, 10, ADKEY_ADCV_CONFIG_EN);
config(BIT, "ADKEY按键2的ADC值", "小于此ADC值为ADKEY第2个按键", ADCV_NUM1, 8, 0, 255, 32, ADKEY_ADCV_CONFIG_EN);
config(BIT, "ADKEY按键3的ADC值", "小于此ADC值为ADKEY第3个按键", ADCV_NUM2, 8, 0, 255, 53, ADKEY_ADCV_CONFIG_EN);

config(SUB, "AUX配置", "AUX模式的相关配置", FUNC_AUX_EN);
config(CHECK, "插入LINEIN关机", "是否使能插入LINEIN关机功能，大耳包功能", LINEIN_2_PWRDOWN_EN, 0, FUNC_AUX_EN);
config(CHECK, "插入LINEIN关机提示音", "插入LINEIN关机是否播放关机提示音", LINEIN_2_PWRDOWN_TONE_EN, 0, LINEIN_2_PWRDOWN_EN);
config(CHECK, "模式切换进AUX模式", "有LINEIN检测时，LINEIN线没有插入，是否能通过模式转换进入AUX模式。", MODE_2_AUX_EN, 0, FUNC_AUX_EN);
config(LISTVAL, "AUX模拟增益", "AUX模拟增益选择", AUX_ANL_GAIN, BIT, 2, 1, 4, ("+3DB", 0), ("0DB", 1), ("-6DB", 2), ("-12DB", 3), FUNC_AUX_EN);
config(LISTVAL, "AUXL通路选择", "AUX左声道通路选择", AUXL_SEL, BIT, 2, 0, 4, ("无AUXL输入", 0), ("AUXL_PB3", 1), ("AUXL_PE7", 2), ("AUXL_PA7", 3), FUNC_AUX_EN);
config(LISTVAL, "选择LINEIN检测IO", "选择LINEIN检测GPIO", LINEIN_DET_IO, BIT, 3, 0, 8, ("None", 0), ("PA7", 1), ("PB3", 2), ("PB4", 3), ("PE0", 4), ("PE7", 5), ("PF2", 6), ("复用PWRKEY检测", 7), FUNC_AUX_EN);

config(SUB, "马达配置", "各状态马达振动时间配置", MOTOR_TIME_CFG_EN);
config(LISTVAL, "开机振动时间", 		"选择开机振动时间或关闭", 		MOTOR_PWRON_SEL, 	BIT, 2, 2, 	4, ("无振动", 0), ("500ms", 1), ("1秒", 2), ("2秒", 3), MOTOR_TIME_CFG_EN);
config(LISTVAL, "关机振动时间", 		"选择关机振动时间或关闭", 		MOTOR_PWROFF_SEL, 	BIT, 2, 2, 	4, ("无振动", 0), ("500ms", 1), ("1秒", 2), ("2秒", 3), MOTOR_TIME_CFG_EN);
config(LISTVAL, "蓝牙连接振动时间", 	"选择蓝牙连接振动时间或关闭", 	MOTOR_CONN_SEL, 	BIT, 2, 2, 	4, ("无振动", 0), ("500ms", 1), ("1秒", 2), ("2秒", 3), MOTOR_TIME_CFG_EN);
config(LISTVAL, "蓝牙断开振动时间", 	"选择蓝牙断开振动时间或关闭", 	MOTOR_DISCONN_SEL, 	BIT, 2, 2, 	4, ("无振动", 0), ("500ms", 1), ("1秒", 2), ("2秒", 3), MOTOR_TIME_CFG_EN);
config(LISTVAL, "响铃振动时间", 		"选择响铃振动时间或关闭", 		MOTOR_RING_SEL, 	BIT, 2, 2, 	4, ("无振动", 0), ("500ms", 1), ("1秒", 2), ("2秒", 3), MOTOR_TIME_CFG_EN);

config(SUB, "LED灯配置", "选择及配置LED状态指示灯");
config(CHECK, "系统指示灯(蓝灯)", "是否使用系统状态指示灯", LED_BLED_EN, 1);
config(CHECK, "电源状态灯(红灯)", "是否使用充电/电源指示灯", LED_RLED_EN, 1);
config(CHECK, "省电阻1个IO推两个灯", "省电阻1个IO推两个灯，不能兼容升级功能", PORT_2LED_RESLESS_EN, 1, LED_BLED_EN);
config(LISTVAL, "蓝灯IO选择", "红灯的GPIO口选择", BLED_IO_SEL, BIT, 3, 6, 8, ("None", 0), ("PA7", 2), ("PB3", 3), ("PB4", 4), ("PE0", 5), ("PE7", 6), ("PF2", 7), ("MICIN", 1), LED_BLED_EN);
config(LISTVAL, "红灯IO选择", "红灯的GPIO口选择", RLED_IO_SEL, BIT, 3, 6, 8, ("None", 0), ("PA7", 2), ("PB3", 3), ("PB4", 4), ("PE0", 5), ("PE7", 6), ("PF2", 7), ("DACL", 1), LED_RLED_EN);
config(CHECK,   "自定义LED闪灯状态", "是否需要自定义LED闪灯状态", LED_STA_CONFIG_EN, 0);
config(CHECK,   "呼吸灯仅亮灯过程缓变", "是否呼吸灯仅亮灯过程中, 否则亮灯及灭灯过程都缓慢变化", LED_ON_BRE_ONLY_EN, 0, LED_BLED_EN);
config(LISTVAL, "充电状态闪灯", "充电状态LED灯配置", LED_CHARGE_XCFG, BIT, 4, 2, 11, ("红蓝灯全灭", 0), ("红蓝灯全亮", 1), ("红灯亮", 2), ("红灯只亮2秒", 3), ("蓝灯亮", 4), ("蓝灯只亮2秒", 5), ("红蓝同时呼吸灯模式", 11), ("红蓝交替呼吸灯模式", 12), ("蓝灯呼吸灯模式", 13), ("红灯呼吸灯模式", 14), ("无LED灯显示效果", 15), CHARGE_EN);
config(LISTVAL, "充满电状态蓝灯亮", "设置充满电蓝灯亮时间", LED_CHARGE_FULLY_XCFG, BIT, 3, 3, 8, ("不亮蓝灯", 0), ("充满进低功耗后亮蓝灯", 1), ("亮20秒", 2), ("亮30秒", 3), ("1分钟", 4), ("2分钟", 5), ("3分钟", 6), ("常亮", 7), CHARGE_EN);
config(LISTVAL, "AUX播放闪灯选择", "AUX模式播放状态蓝灯配置", 	LED_AUX_PLAY_SEL,  BIT, 2, 2, 4, ("常灭", 0), ("亮50ms灭5秒", 1), ("亮1秒灭1秒", 2), ("常亮", 3), LED_BLED_EN);
config(LISTVAL, "AUX暂停闪灯选择", "AUX模式暂停状态蓝灯配置", 	LED_AUX_PAUSE_SEL, BIT, 2, 3, 4, ("常灭", 0), ("亮50ms灭5秒", 1), ("亮1秒灭1秒", 2), ("常亮", 3), LED_BLED_EN);
config(LISTVAL, "蓝牙休眠闪灯选择", "蓝牙休眠状态蓝灯配置", 	LED_BT_SLEEP_SEL,  BIT, 2, 1, 4, ("常灭", 0), ("亮50ms灭5秒", 1), ("亮1秒灭1秒", 2), ("常亮", 3), LED_BLED_EN);
config(RELATE, LED_STA_CONFIG_EN, !1);
config(LISTVAL, "开机状态", "开机状态LED灯配置", LED_PWRON_XCFG, 	BIT, 5, 11, 28, ("红蓝灯全灭", 0), ("红蓝灯全亮", 1), ("蓝灯亮", 2), ("蓝灯慢闪(1秒周期)", 3), ("蓝灯快闪(300ms周期)", 4), ("蓝灯5秒闪烁1下", 5), ("蓝灯5秒连闪2下", 6), ("蓝灯5秒连闪3下", 7), ("蓝灯闪烁1下(500ms)", 8), ("蓝灯闪烁1下(1秒)", 9), ("蓝灯闪烁2下", 10), ("蓝灯闪烁3下", 11), ("红灯亮", 12), ("红灯慢闪(1秒周期)", 13), ("红灯快闪(300ms周期)", 14), ("红灯5秒闪烁1下", 15), ("红灯5秒连闪2下", 16), ("红灯5秒连闪3下", 17), ("红灯闪烁1下(500ms)", 18), ("红灯闪烁1下(1秒)", 19), ("红灯闪烁2下", 20), ("红灯闪烁3下", 21), ("红蓝交替闪(快闪)", 22), ("红蓝交替闪(慢闪)", 23), ("红蓝灯同时闪烁1下", 24), ("红蓝灯同时闪烁2下", 25), ("红蓝灯同时闪烁3下", 26), ("无LED灯显示效果", 31));
config(LISTVAL, "关机状态", "关机状态LED灯配置", LED_PWROFF_XCFG, 	BIT, 5, 11, 28, ("红蓝灯全灭", 0), ("红蓝灯全亮", 1), ("蓝灯亮", 2), ("蓝灯慢闪(1秒周期)", 3), ("蓝灯快闪(300ms周期)", 4), ("蓝灯5秒闪烁1下", 5), ("蓝灯5秒连闪2下", 6), ("蓝灯5秒连闪3下", 7), ("蓝灯闪烁1下(500ms)", 8), ("蓝灯闪烁1下(1秒)", 9), ("蓝灯闪烁2下", 10), ("蓝灯闪烁3下", 11), ("红灯亮", 12), ("红灯慢闪(1秒周期)", 13), ("红灯快闪(300ms周期)", 14), ("红灯5秒闪烁1下", 15), ("红灯5秒连闪2下", 16), ("红灯5秒连闪3下", 17), ("红灯闪烁1下(500ms)", 18), ("红灯闪烁1下(1秒)", 19), ("红灯闪烁2下", 20), ("红灯闪烁3下", 21), ("红蓝交替闪(快闪)", 22), ("红蓝交替闪(慢闪)", 23), ("红蓝灯同时闪烁1下", 24), ("红蓝灯同时闪烁2下", 25), ("红蓝灯同时闪烁3下", 26), ("无LED灯显示效果", 31));
config(LISTVAL, "回连状态", "回连状态LED灯配置", LED_RECONN_XCFG,	BIT, 5, 4,  28, ("红蓝灯全灭", 0), ("红蓝灯全亮", 1), ("蓝灯亮", 2), ("蓝灯慢闪(1秒周期)", 3), ("蓝灯快闪(300ms周期)", 4), ("蓝灯5秒闪烁1下", 5), ("蓝灯5秒连闪2下", 6), ("蓝灯5秒连闪3下", 7), ("蓝灯闪烁1下(500ms)", 8), ("蓝灯闪烁1下(1秒)", 9), ("蓝灯闪烁2下", 10), ("蓝灯闪烁3下", 11), ("红灯亮", 12), ("红灯慢闪(1秒周期)", 13), ("红灯快闪(300ms周期)", 14), ("红灯5秒闪烁1下", 15), ("红灯5秒连闪2下", 16), ("红灯5秒连闪3下", 17), ("红灯闪烁1下(500ms)", 18), ("红灯闪烁1下(1秒)", 19), ("红灯闪烁2下", 20), ("红灯闪烁3下", 21), ("红蓝交替闪(快闪)", 22), ("红蓝交替闪(慢闪)", 23), ("红蓝灯同时闪烁1下", 24), ("红蓝灯同时闪烁2下", 25), ("红蓝灯同时闪烁3下", 26), ("无LED灯显示效果", 31));
config(LISTVAL, "配对状态", "配对状态LED灯配置", LED_PAIR_XCFG, 	BIT, 5, 20, 28, ("红蓝灯全灭", 0), ("红蓝灯全亮", 1), ("蓝灯亮", 2), ("蓝灯慢闪(1秒周期)", 3), ("蓝灯快闪(300ms周期)", 4), ("蓝灯5秒闪烁1下", 5), ("蓝灯5秒连闪2下", 6), ("蓝灯5秒连闪3下", 7), ("蓝灯闪烁1下(500ms)", 8), ("蓝灯闪烁1下(1秒)", 9), ("蓝灯闪烁2下", 10), ("蓝灯闪烁3下", 11), ("红灯亮", 12), ("红灯慢闪(1秒周期)", 13), ("红灯快闪(300ms周期)", 14), ("红灯5秒闪烁1下", 15), ("红灯5秒连闪2下", 16), ("红灯5秒连闪3下", 17), ("红灯闪烁1下(500ms)", 18), ("红灯闪烁1下(1秒)", 19), ("红灯闪烁2下", 20), ("红灯闪烁3下", 21), ("红蓝交替闪(快闪)", 22), ("红蓝交替闪(慢闪)", 23), ("红蓝灯同时闪烁1下", 24), ("红蓝灯同时闪烁2下", 25), ("红蓝灯同时闪烁3下", 26), ("无LED灯显示效果", 31));
config(LISTVAL, "连接状态", "连接状态LED灯配置", LED_CONN_XCFG, 	BIT, 5, 5,  32, ("红蓝灯全灭", 0), ("红蓝灯全亮", 1), ("蓝灯亮", 2), ("蓝灯慢闪(1秒周期)", 3), ("蓝灯快闪(300ms周期)", 4), ("蓝灯5秒闪烁1下", 5), ("蓝灯5秒连闪2下", 6), ("蓝灯5秒连闪3下", 7), ("蓝灯闪烁1下(500ms)", 8), ("蓝灯闪烁1下(1秒)", 9), ("蓝灯闪烁2下", 10), ("蓝灯闪烁3下", 11), ("红灯亮", 12), ("红灯慢闪(1秒周期)", 13), ("红灯快闪(300ms周期)", 14), ("红灯5秒闪烁1下", 15), ("红灯5秒连闪2下", 16), ("红灯5秒连闪3下", 17), ("红灯闪烁1下(500ms)", 18), ("红灯闪烁1下(1秒)", 19), ("红灯闪烁2下", 20), ("红灯闪烁3下", 21), ("红蓝交替闪(快闪)", 22), ("红蓝交替闪(慢闪)", 23), ("红蓝灯同时闪烁1下", 24), ("红蓝灯同时闪烁2下", 25), ("红蓝灯同时闪烁3下", 26), ("红蓝同时呼吸灯模式", 27), ("红蓝交替呼吸灯模式", 28), ("蓝灯呼吸灯模式", 29), ("红灯呼吸灯模式", 30), ("无LED灯显示效果", 31));
config(LISTVAL, "播放状态", "播放状态LED灯配置", LED_PLAY_XCFG, 	BIT, 5, 5,  32, ("红蓝灯全灭", 0), ("红蓝灯全亮", 1), ("蓝灯亮", 2), ("蓝灯慢闪(1秒周期)", 3), ("蓝灯快闪(300ms周期)", 4), ("蓝灯5秒闪烁1下", 5), ("蓝灯5秒连闪2下", 6), ("蓝灯5秒连闪3下", 7), ("蓝灯闪烁1下(500ms)", 8), ("蓝灯闪烁1下(1秒)", 9), ("蓝灯闪烁2下", 10), ("蓝灯闪烁3下", 11), ("红灯亮", 12), ("红灯慢闪(1秒周期)", 13), ("红灯快闪(300ms周期)", 14), ("红灯5秒闪烁1下", 15), ("红灯5秒连闪2下", 16), ("红灯5秒连闪3下", 17), ("红灯闪烁1下(500ms)", 18), ("红灯闪烁1下(1秒)", 19), ("红灯闪烁2下", 20), ("红灯闪烁3下", 21), ("红蓝交替闪(快闪)", 22), ("红蓝交替闪(慢闪)", 23), ("红蓝灯同时闪烁1下", 24), ("红蓝灯同时闪烁2下", 25), ("红蓝灯同时闪烁3下", 26), ("红蓝同时呼吸灯模式", 27), ("红蓝交替呼吸灯模式", 28), ("蓝灯呼吸灯模式", 29), ("红灯呼吸灯模式", 30), ("无LED灯显示效果", 31));
config(LISTVAL, "低电状态", "低电状态LED灯配置", LED_LOWBAT_XCFG, 	BIT, 5, 0,  28, ("保持灯状态", 0), ("红蓝灯全亮", 1), ("蓝灯亮", 2), ("蓝灯慢闪(1秒周期)", 3), ("蓝灯快闪(300ms周期)", 4), ("蓝灯5秒闪烁1下", 5), ("蓝灯5秒连闪2下", 6), ("蓝灯5秒连闪3下", 7), ("蓝灯闪烁1下(500ms)", 8), ("蓝灯闪烁1下(1秒)", 9), ("蓝灯闪烁2下", 10), ("蓝灯闪烁3下", 11), ("红灯亮", 12), ("红灯慢闪(1秒周期)", 13), ("红灯快闪(300ms周期)", 14), ("红灯5秒闪烁1下", 15), ("红灯5秒连闪2下", 16), ("红灯5秒连闪3下", 17), ("红灯闪烁1下(500ms)", 18), ("红灯闪烁1下(1秒)", 19), ("红灯闪烁2下", 20), ("红灯闪烁3下", 21), ("红蓝交替闪(快闪)", 22), ("红蓝交替闪(慢闪)", 23), ("红蓝灯同时闪烁1下", 24), ("红蓝灯同时闪烁2下", 25), ("红蓝灯同时闪烁3下", 26), ("无LED灯显示效果", 31));
config(RELATE, LED_STA_CONFIG_EN, !0);
config(LED, "开机", 	"配置开机状态下的闪灯状态", 	LED_POWERON, 0x00, 0xaa, 10, 0, LED_STA_CONFIG_EN);
config(LED, "关机", 	"配置关机状态下的闪灯状态", 	LED_POWEROFF, 0x1f, 0x00, 4, 255, LED_STA_CONFIG_EN);
config(LED, "回连状态", "配置回连状态下的闪灯状态", 	LED_RECONNECT, 0x00, 0xaa, 6, 0, LED_STA_CONFIG_EN);
config(LED, "配对状态", "配置配对状态下的闪灯状态", 	LED_PAIRING, 0x60, 0x03, 3, 6, LED_STA_CONFIG_EN);
config(LED, "已连接", 	"配置已连接状态下的闪灯状态", 	LED_CONNECTED, 0x00, 0x02, 2, 86, LED_STA_CONFIG_EN);
config(LED, "播放", 	"配置播放状态下的闪灯状态", 	LED_PLAYING, 0x00, 0x02, 2, 86, LED_STA_CONFIG_EN);
config(LED, "来电", 	"配置来电状态下的闪灯状态", 	LED_RING, 0x00, 0x02, 2, 86, LED_STA_CONFIG_EN);
config(LED, "通话", 	"配置通话状态下的闪灯状态", 	LED_CALLING, 0x00, 0x02, 2, 86, LED_STA_CONFIG_EN);
config(LED, "低电", 	"配置低电状态下的闪灯状态", 	LED_LOWBAT, 0xaa, 0x00, 6, 0, LED_STA_CONFIG_EN);
config(RELATE)

config(SUB, "蓝牙地址", "配置蓝牙地址", BT_ADDR_CONFIG_EN);
config(MAC, "蓝牙地址", "蓝牙的MAC地址", BT_ADDR, 6, 41:42:98:00:00:01, 41:42:98:FF:FF:FF, 41:42:00:00:00:01, BT_ADDR_CONFIG_EN);

config(SUB, "产测保留", "产测保留的相关配置");
config(LEVEL, 0x0E);
config(KEEP)
config(BYTE, "产测OSCI电容", "低6位为细调26M晶振OSCI与OSCO负载电容，单位0.25PF。OSC电容大小：n * 0.25PF + BIT6的基础电容", OSC_CAP, 0, 63, 50);
config(KEEPEND)
config(LEVEL, 0x03);

config(SUB, "蓝牙名称", "配置蓝牙名称", BT_NAME_CONFIG_EN);
config(TEXT, "蓝牙名称 (32字符)", "配置蓝牙名称, 使用`做分隔符", BT_NAME, 32, "", BT_NAME_CONFIG_EN);

###################################################################################################
#                                                                                                 #
# 以下是允许修改区                                                                                #
# 可以在以下增删自定义配置                                                                        #
#                                                                                                 #
###################################################################################################
config(SUB, "自定义晶振电容", "自定义晶振电容");
config(CHECK,  "不使用产测电容值",  "是否不使用产测电容值，使用自定义电容值",  USER_CAP,  0);
config(BIT, "自定义OSCI电容", "细调26M晶振OSCI与OSCO负载电容，单位0.25PF。OSC电容大小：n * 0.25PF + 基础电容", UOSC_CAP, 6, 0, 63, 50, USER_CAP);
config(LISTVAL, "自定义OSC基础电容", "同时配置26M晶振OSCI与OSCO基础电容", UOSC_BOTH_CAP, BIT, 1, 0, 2, ("0PF", 0), ("6PF", 1), USER_CAP);

config(SUB, "ANC配置", "ANC相关配置");
config(CHECK, "ANC功能", "是否打开ANC功能", ANC_EN, 0);
config(CHECK, "ANC MIC Gain产测配置", "MIC Gain是否取产测值，否则取资源文件值", ANC_GAIN_EN, 0, ANC_EN);

config(SUB, "其它配置", "其它扩展配置");
config(CHECK, "FCC测试功能", "是否打开FCC测试功能, 需要打开程序中对应的宏", BT_FCC_EN, 0);
config(LISTVAL, "FCC通信IO", "选择FCC通信IO", BT_FCC_IO, BIT, 2, 0, 4, ("PB3", 0), ("PA7", 1), ("PF2", 2), ("VUSB", 3),BT_FCC_EN);

config(LEVEL, 0x100);
makecfgfile(xcfg.bin);
makecfgdef(xcfg.h);
xcopy(xcfg.h, ../../xcfg.h);

